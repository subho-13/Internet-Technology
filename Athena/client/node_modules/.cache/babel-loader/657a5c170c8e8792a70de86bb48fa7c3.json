{"ast":null,"code":"'use strict';\n/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar WS = module.exports = require('./lib/WebSocket');\n\nWS.Server = require('./lib/WebSocketServer');\nWS.Sender = require('./lib/Sender');\nWS.Receiver = require('./lib/Receiver');\n/**\n * Create a new WebSocket server.\n *\n * @param {Object} options Server options\n * @param {Function} fn Optional connection listener.\n * @returns {WS.Server}\n * @api public\n */\n\nWS.createServer = function createServer(options, fn) {\n  var server = new WS.Server(options);\n\n  if (typeof fn === 'function') {\n    server.on('connection', fn);\n  }\n\n  return server;\n};\n/**\n * Create a new WebSocket connection.\n *\n * @param {String} address The URL/address we need to connect to.\n * @param {Function} fn Open listener.\n * @returns {WS}\n * @api public\n */\n\n\nWS.connect = WS.createConnection = function connect(address, fn) {\n  var client = new WS(address);\n\n  if (typeof fn === 'function') {\n    client.on('open', fn);\n  }\n\n  return client;\n};","map":{"version":3,"sources":["/home/subho/Programming/Internet-Technology/Athena/node_modules/ws/index.js"],"names":["WS","module","exports","require","Server","Sender","Receiver","createServer","options","fn","server","on","connect","createConnection","address","client"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,EAAE,GAAGC,MAAM,CAACC,OAAP,GAAiBC,OAAO,CAAC,iBAAD,CAAjC;;AAEAH,EAAE,CAACI,MAAH,GAAYD,OAAO,CAAC,uBAAD,CAAnB;AACAH,EAAE,CAACK,MAAH,GAAYF,OAAO,CAAC,cAAD,CAAnB;AACAH,EAAE,CAACM,QAAH,GAAcH,OAAO,CAAC,gBAAD,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAH,EAAE,CAACO,YAAH,GAAkB,SAASA,YAAT,CAAsBC,OAAtB,EAA+BC,EAA/B,EAAmC;AACnD,MAAIC,MAAM,GAAG,IAAIV,EAAE,CAACI,MAAP,CAAcI,OAAd,CAAb;;AAEA,MAAI,OAAOC,EAAP,KAAc,UAAlB,EAA8B;AAC5BC,IAAAA,MAAM,CAACC,EAAP,CAAU,YAAV,EAAwBF,EAAxB;AACD;;AAED,SAAOC,MAAP;AACD,CARD;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACAV,EAAE,CAACY,OAAH,GAAaZ,EAAE,CAACa,gBAAH,GAAsB,SAASD,OAAT,CAAiBE,OAAjB,EAA0BL,EAA1B,EAA8B;AAC/D,MAAIM,MAAM,GAAG,IAAIf,EAAJ,CAAOc,OAAP,CAAb;;AAEA,MAAI,OAAOL,EAAP,KAAc,UAAlB,EAA8B;AAC5BM,IAAAA,MAAM,CAACJ,EAAP,CAAU,MAAV,EAAkBF,EAAlB;AACD;;AAED,SAAOM,MAAP;AACD,CARD","sourcesContent":["'use strict';\n\n/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nvar WS = module.exports = require('./lib/WebSocket');\n\nWS.Server = require('./lib/WebSocketServer');\nWS.Sender = require('./lib/Sender');\nWS.Receiver = require('./lib/Receiver');\n\n/**\n * Create a new WebSocket server.\n *\n * @param {Object} options Server options\n * @param {Function} fn Optional connection listener.\n * @returns {WS.Server}\n * @api public\n */\nWS.createServer = function createServer(options, fn) {\n  var server = new WS.Server(options);\n\n  if (typeof fn === 'function') {\n    server.on('connection', fn);\n  }\n\n  return server;\n};\n\n/**\n * Create a new WebSocket connection.\n *\n * @param {String} address The URL/address we need to connect to.\n * @param {Function} fn Open listener.\n * @returns {WS}\n * @api public\n */\nWS.connect = WS.createConnection = function connect(address, fn) {\n  var client = new WS(address);\n\n  if (typeof fn === 'function') {\n    client.on('open', fn);\n  }\n\n  return client;\n};\n"]},"metadata":{},"sourceType":"script"}