{"ast":null,"code":"var _jsxFileName = \"/home/subho/Programming/Internet-Technology/Athena/client/src/components/chat/sendbar.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SendBar extends Component {\n  constructor() {\n    super();\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      this.props.handleSend({\n        type: this.state.type,\n        content: this.state.content\n      });\n    };\n\n    this.handleOptionClick = event => {\n      if (this.state.type === \"text\") {\n        this.setState({\n          type: \"image\"\n        });\n      } else {\n        this.setState({\n          type: \"text\"\n        });\n      }\n    };\n\n    this.handleTextContent = event => {\n      this.setState({\n        content: event.target.value\n      });\n    };\n\n    this.handleImageFile = event => {\n      const reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.setState({\n          content: reader.result\n        });\n      };\n\n      reader.readAsDataURL(event.target.files[0]);\n    };\n\n    this.state = {\n      type: \"text\",\n      content: \"\"\n    };\n  }\n\n  getTextForm() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        onChange: this.handleImageFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this);\n  }\n\n  getImgForm() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"image\",\n        onChange: this.handleImageFile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n  render() {\n    let form;\n\n    if (this.type === \"text\") {\n      form = this.getTextForm;\n    } else if (this.type === \"image\") {}\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/png\",\n          name: \"image\",\n          onChange: this.handleImageFile\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SendBar;","map":{"version":3,"sources":["/home/subho/Programming/Internet-Technology/Athena/client/src/components/chat/sendbar.js"],"names":["React","Component","SendBar","constructor","onSubmit","event","preventDefault","props","handleSend","type","state","content","handleOptionClick","setState","handleTextContent","target","value","handleImageFile","reader","FileReader","onloadend","result","readAsDataURL","files","getTextForm","getImgForm","render","form"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\n\nclass SendBar extends Component {\n    constructor() {\n        super()\n        this.state = {\n            type: \"text\",\n            content: \"\",\n        }\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault()\n        this.props.handleSend({\n            type: this.state.type,\n            content: this.state.content,\n        })\n    }\n\n    handleOptionClick = (event) => {\n        if (this.state.type === \"text\") {\n            this.setState({ type: \"image\" })\n        } else {\n            this.setState({ type: \"text\" })\n        }\n    }\n\n    handleTextContent = (event) => {\n        this.setState({ content: event.target.value })\n    }\n\n    getTextForm() {\n        return (\n            <form onSubmit={this.onSubmit}>\n                <input\n                    type=\"file\"\n                    name=\"image\"\n                    onChange={this.handleImageFile}\n                />\n                <input type=\"submit\" value=\"Upload\" />\n            </form>\n        )\n    }\n\n    handleImageFile = (event) => {\n        const reader = new FileReader()\n\n        reader.onloadend = () => {\n            this.setState({ content: reader.result })\n        }\n\n        reader.readAsDataURL(event.target.files[0])\n    }\n\n    getImgForm() {\n        return (\n            <form onSubmit={this.onSubmit}>\n                <input\n                    type=\"file\"\n                    name=\"image\"\n                    onChange={this.handleImageFile}\n                />\n                <input type=\"submit\" value=\"Upload\" />\n            </form>\n        )\n    }\n\n    render() {\n        let form\n\n        if (this.type === \"text\") {\n            form = this.getTextForm\n        } else if (this.type === \"image\") {}\n        return (\n            <div>\n                <form onSubmit={this.onSubmit}>\n                    <input\n                        type=\"file\"\n                        accept=\"image/png\"\n                        name=\"image\"\n                        onChange={this.handleImageFile}\n                    />\n                    <input type=\"submit\" value=\"Upload\" />{\" \"}\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default SendBar\n"]},"metadata":{},"sourceType":"module"}