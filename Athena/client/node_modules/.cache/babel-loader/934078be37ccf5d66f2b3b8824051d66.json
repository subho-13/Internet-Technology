{"ast":null,"code":"/**\r\n * JSON parse.\r\n *\r\n * @see Based on jQuery#parseJSON (MIT) and JSON2\r\n * @api private\r\n */\nvar rvalidchars = /^[\\],:{}\\s]*$/;\nvar rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\nvar rvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\nvar rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\nvar rtrimLeft = /^\\s+/;\nvar rtrimRight = /\\s+$/;\n\nmodule.exports = function parsejson(data) {\n  if ('string' != typeof data || !data) {\n    return null;\n  }\n\n  data = data.replace(rtrimLeft, '').replace(rtrimRight, ''); // Attempt to parse using the native JSON parser first\n\n  if (global.JSON && JSON.parse) {\n    return JSON.parse(data);\n  }\n\n  if (rvalidchars.test(data.replace(rvalidescape, '@').replace(rvalidtokens, ']').replace(rvalidbraces, ''))) {\n    return new Function('return ' + data)();\n  }\n};","map":{"version":3,"sources":["/home/subho/Programming/Internet-Technology/Athena/node_modules/parsejson/index.js"],"names":["rvalidchars","rvalidescape","rvalidtokens","rvalidbraces","rtrimLeft","rtrimRight","module","exports","parsejson","data","replace","global","JSON","parse","test","Function"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAIA,WAAW,GAAG,eAAlB;AACA,IAAIC,YAAY,GAAG,qCAAnB;AACA,IAAIC,YAAY,GAAG,kEAAnB;AACA,IAAIC,YAAY,GAAG,sBAAnB;AACA,IAAIC,SAAS,GAAG,MAAhB;AACA,IAAIC,UAAU,GAAG,MAAjB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,SAASC,SAAT,CAAmBC,IAAnB,EAAyB;AACxC,MAAI,YAAY,OAAOA,IAAnB,IAA2B,CAACA,IAAhC,EAAsC;AACpC,WAAO,IAAP;AACD;;AAEDA,EAAAA,IAAI,GAAGA,IAAI,CAACC,OAAL,CAAaN,SAAb,EAAwB,EAAxB,EAA4BM,OAA5B,CAAoCL,UAApC,EAAgD,EAAhD,CAAP,CALwC,CAOxC;;AACA,MAAIM,MAAM,CAACC,IAAP,IAAeA,IAAI,CAACC,KAAxB,EAA+B;AAC7B,WAAOD,IAAI,CAACC,KAAL,CAAWJ,IAAX,CAAP;AACD;;AAED,MAAIT,WAAW,CAACc,IAAZ,CAAiBL,IAAI,CAACC,OAAL,CAAaT,YAAb,EAA2B,GAA3B,EAChBS,OADgB,CACRR,YADQ,EACM,GADN,EAEhBQ,OAFgB,CAERP,YAFQ,EAEM,EAFN,CAAjB,CAAJ,EAEiC;AAC/B,WAAQ,IAAIY,QAAJ,CAAa,YAAYN,IAAzB,CAAD,EAAP;AACD;AACF,CAjBD","sourcesContent":["/**\r\n * JSON parse.\r\n *\r\n * @see Based on jQuery#parseJSON (MIT) and JSON2\r\n * @api private\r\n */\r\n\r\nvar rvalidchars = /^[\\],:{}\\s]*$/;\r\nvar rvalidescape = /\\\\(?:[\"\\\\\\/bfnrt]|u[0-9a-fA-F]{4})/g;\r\nvar rvalidtokens = /\"[^\"\\\\\\n\\r]*\"|true|false|null|-?\\d+(?:\\.\\d*)?(?:[eE][+\\-]?\\d+)?/g;\r\nvar rvalidbraces = /(?:^|:|,)(?:\\s*\\[)+/g;\r\nvar rtrimLeft = /^\\s+/;\r\nvar rtrimRight = /\\s+$/;\r\n\r\nmodule.exports = function parsejson(data) {\r\n  if ('string' != typeof data || !data) {\r\n    return null;\r\n  }\r\n\r\n  data = data.replace(rtrimLeft, '').replace(rtrimRight, '');\r\n\r\n  // Attempt to parse using the native JSON parser first\r\n  if (global.JSON && JSON.parse) {\r\n    return JSON.parse(data);\r\n  }\r\n\r\n  if (rvalidchars.test(data.replace(rvalidescape, '@')\r\n      .replace(rvalidtokens, ']')\r\n      .replace(rvalidbraces, ''))) {\r\n    return (new Function('return ' + data))();\r\n  }\r\n};"]},"metadata":{},"sourceType":"script"}