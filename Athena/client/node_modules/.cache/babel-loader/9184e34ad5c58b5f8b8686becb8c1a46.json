{"ast":null,"code":"/**\n * Module dependencies.\n */\nvar Emitter = require('events').EventEmitter;\n\nvar parser = require('socket.io-parser');\n/**\n * Module exports.\n */\n\n\nmodule.exports = Adapter;\n/**\n * Memory adapter constructor.\n *\n * @param {Namespace} nsp\n * @api public\n */\n\nfunction Adapter(nsp) {\n  this.nsp = nsp;\n  this.rooms = {};\n  this.sids = {};\n  this.encoder = new parser.Encoder();\n}\n/**\n * Inherits from `EventEmitter`.\n */\n\n\nAdapter.prototype.__proto__ = Emitter.prototype;\n/**\n * Adds a socket to a room.\n *\n * @param {String} socket id\n * @param {String} room name\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.add = function (id, room, fn) {\n  this.sids[id] = this.sids[id] || {};\n  this.sids[id][room] = true;\n  this.rooms[room] = this.rooms[room] || Room();\n  this.rooms[room].add(id);\n  if (fn) process.nextTick(fn.bind(null, null));\n};\n/**\n * Removes a socket from a room.\n *\n * @param {String} socket id\n * @param {String} room name\n * @param {Function} callback\n * @api public\n */\n\n\nAdapter.prototype.del = function (id, room, fn) {\n  this.sids[id] = this.sids[id] || {};\n  delete this.sids[id][room];\n\n  if (this.rooms.hasOwnProperty(room)) {\n    this.rooms[room].del(id);\n    if (this.rooms[room].length === 0) delete this.rooms[room];\n  }\n\n  if (fn) process.nextTick(fn.bind(null, null));\n};\n/**\n * Removes a socket from all rooms it's joined.\n *\n * @param {String} socket id\n * @param {Function} callback\n * @api public\n */\n\n\nAdapter.prototype.delAll = function (id, fn) {\n  var rooms = this.sids[id];\n\n  if (rooms) {\n    for (var room in rooms) {\n      if (this.rooms.hasOwnProperty(room)) {\n        this.rooms[room].del(id);\n        if (this.rooms[room].length === 0) delete this.rooms[room];\n      }\n    }\n  }\n\n  delete this.sids[id];\n  if (fn) process.nextTick(fn.bind(null, null));\n};\n/**\n * Broadcasts a packet.\n *\n * Options:\n *  - `flags` {Object} flags for this packet\n *  - `except` {Array} sids that should be excluded\n *  - `rooms` {Array} list of rooms to broadcast to\n *\n * @param {Object} packet object\n * @api public\n */\n\n\nAdapter.prototype.broadcast = function (packet, opts) {\n  var rooms = opts.rooms || [];\n  var except = opts.except || [];\n  var flags = opts.flags || {};\n  var packetOpts = {\n    preEncoded: true,\n    volatile: flags.volatile,\n    compress: flags.compress\n  };\n  var ids = {};\n  var self = this;\n  var socket;\n  packet.nsp = this.nsp.name;\n  this.encoder.encode(packet, function (encodedPackets) {\n    if (rooms.length) {\n      for (var i = 0; i < rooms.length; i++) {\n        var room = self.rooms[rooms[i]];\n        if (!room) continue;\n        var sockets = room.sockets;\n\n        for (var id in sockets) {\n          if (sockets.hasOwnProperty(id)) {\n            if (ids[id] || ~except.indexOf(id)) continue;\n            socket = self.nsp.connected[id];\n\n            if (socket) {\n              socket.packet(encodedPackets, packetOpts);\n              ids[id] = true;\n            }\n          }\n        }\n      }\n    } else {\n      for (var id in self.sids) {\n        if (self.sids.hasOwnProperty(id)) {\n          if (~except.indexOf(id)) continue;\n          socket = self.nsp.connected[id];\n          if (socket) socket.packet(encodedPackets, packetOpts);\n        }\n      }\n    }\n  });\n};\n/**\n * Gets a list of clients by sid.\n *\n * @param {Array} explicit set of rooms to check.\n * @param {Function} callback\n * @api public\n */\n\n\nAdapter.prototype.clients = function (rooms, fn) {\n  if ('function' == typeof rooms) {\n    fn = rooms;\n    rooms = null;\n  }\n\n  rooms = rooms || [];\n  var ids = {};\n  var self = this;\n  var sids = [];\n  var socket;\n\n  if (rooms.length) {\n    for (var i = 0; i < rooms.length; i++) {\n      var room = self.rooms[rooms[i]];\n      if (!room) continue;\n      var sockets = room.sockets;\n\n      for (var id in sockets) {\n        if (sockets.hasOwnProperty(id)) {\n          if (ids[id]) continue;\n          socket = self.nsp.connected[id];\n\n          if (socket) {\n            sids.push(id);\n            ids[id] = true;\n          }\n        }\n      }\n    }\n  } else {\n    for (var id in self.sids) {\n      if (self.sids.hasOwnProperty(id)) {\n        socket = self.nsp.connected[id];\n        if (socket) sids.push(id);\n      }\n    }\n  }\n\n  if (fn) process.nextTick(fn.bind(null, null, sids));\n};\n/**\n * Gets the list of rooms a given client has joined.\n *\n * @param {String} socket id\n * @param {Function} callback\n * @api public\n */\n\n\nAdapter.prototype.clientRooms = function (id, fn) {\n  var rooms = this.sids[id];\n  if (fn) process.nextTick(fn.bind(null, null, rooms ? Object.keys(rooms) : null));\n};\n/**\n* Room constructor.\n*\n* @api private\n*/\n\n\nfunction Room() {\n  if (!(this instanceof Room)) return new Room();\n  this.sockets = {};\n  this.length = 0;\n}\n/**\n * Adds a socket to a room.\n *\n * @param {String} socket id\n * @api private\n */\n\n\nRoom.prototype.add = function (id) {\n  if (!this.sockets.hasOwnProperty(id)) {\n    this.sockets[id] = true;\n    this.length++;\n  }\n};\n/**\n * Removes a socket from a room.\n *\n * @param {String} socket id\n * @api private\n */\n\n\nRoom.prototype.del = function (id) {\n  if (this.sockets.hasOwnProperty(id)) {\n    delete this.sockets[id];\n    this.length--;\n  }\n};","map":{"version":3,"sources":["/home/subho/Programming/Internet-Technology/Athena/node_modules/socket.io-adapter/index.js"],"names":["Emitter","require","EventEmitter","parser","module","exports","Adapter","nsp","rooms","sids","encoder","Encoder","prototype","__proto__","add","id","room","fn","Room","process","nextTick","bind","del","hasOwnProperty","length","delAll","broadcast","packet","opts","except","flags","packetOpts","preEncoded","volatile","compress","ids","self","socket","name","encode","encodedPackets","i","sockets","indexOf","connected","clients","push","clientRooms","Object","keys"],"mappings":"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","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar Emitter = require('events').EventEmitter;\nvar parser = require('socket.io-parser');\n\n/**\n * Module exports.\n */\n\nmodule.exports = Adapter;\n\n/**\n * Memory adapter constructor.\n *\n * @param {Namespace} nsp\n * @api public\n */\n\nfunction Adapter(nsp){\n  this.nsp = nsp;\n  this.rooms = {};\n  this.sids = {};\n  this.encoder = new parser.Encoder();\n}\n\n/**\n * Inherits from `EventEmitter`.\n */\n\nAdapter.prototype.__proto__ = Emitter.prototype;\n\n/**\n * Adds a socket to a room.\n *\n * @param {String} socket id\n * @param {String} room name\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.add = function(id, room, fn){\n  this.sids[id] = this.sids[id] || {};\n  this.sids[id][room] = true;\n  this.rooms[room] = this.rooms[room] || Room();\n  this.rooms[room].add(id);\n  if (fn) process.nextTick(fn.bind(null, null));\n};\n\n/**\n * Removes a socket from a room.\n *\n * @param {String} socket id\n * @param {String} room name\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.del = function(id, room, fn){\n  this.sids[id] = this.sids[id] || {};\n  delete this.sids[id][room];\n  if (this.rooms.hasOwnProperty(room)) {\n    this.rooms[room].del(id);\n    if (this.rooms[room].length === 0) delete this.rooms[room];\n  }\n\n  if (fn) process.nextTick(fn.bind(null, null));\n};\n\n/**\n * Removes a socket from all rooms it's joined.\n *\n * @param {String} socket id\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.delAll = function(id, fn){\n  var rooms = this.sids[id];\n  if (rooms) {\n    for (var room in rooms) {\n      if (this.rooms.hasOwnProperty(room)) {\n        this.rooms[room].del(id);\n        if (this.rooms[room].length === 0) delete this.rooms[room];\n      }\n    }\n  }\n  delete this.sids[id];\n\n  if (fn) process.nextTick(fn.bind(null, null));\n};\n\n/**\n * Broadcasts a packet.\n *\n * Options:\n *  - `flags` {Object} flags for this packet\n *  - `except` {Array} sids that should be excluded\n *  - `rooms` {Array} list of rooms to broadcast to\n *\n * @param {Object} packet object\n * @api public\n */\n\nAdapter.prototype.broadcast = function(packet, opts){\n  var rooms = opts.rooms || [];\n  var except = opts.except || [];\n  var flags = opts.flags || {};\n  var packetOpts = {\n    preEncoded: true,\n    volatile: flags.volatile,\n    compress: flags.compress\n  };\n  var ids = {};\n  var self = this;\n  var socket;\n\n  packet.nsp = this.nsp.name;\n  this.encoder.encode(packet, function(encodedPackets) {\n    if (rooms.length) {\n      for (var i = 0; i < rooms.length; i++) {\n        var room = self.rooms[rooms[i]];\n        if (!room) continue;\n        var sockets = room.sockets;\n        for (var id in sockets) {\n          if (sockets.hasOwnProperty(id)) {\n            if (ids[id] || ~except.indexOf(id)) continue;\n            socket = self.nsp.connected[id];\n            if (socket) {\n              socket.packet(encodedPackets, packetOpts);\n              ids[id] = true;\n            }\n          }\n        }\n      }\n    } else {\n      for (var id in self.sids) {\n        if (self.sids.hasOwnProperty(id)) {\n          if (~except.indexOf(id)) continue;\n          socket = self.nsp.connected[id];\n          if (socket) socket.packet(encodedPackets, packetOpts);\n        }\n      }\n    }\n  });\n};\n\n/**\n * Gets a list of clients by sid.\n *\n * @param {Array} explicit set of rooms to check.\n * @param {Function} callback\n * @api public\n */\n\nAdapter.prototype.clients = function(rooms, fn){\n  if ('function' == typeof rooms){\n    fn = rooms;\n    rooms = null;\n  }\n\n  rooms = rooms || [];\n\n  var ids = {};\n  var self = this;\n  var sids = [];\n  var socket;\n\n  if (rooms.length) {\n    for (var i = 0; i < rooms.length; i++) {\n      var room = self.rooms[rooms[i]];\n      if (!room) continue;\n      var sockets = room.sockets;\n      for (var id in sockets) {\n        if (sockets.hasOwnProperty(id)) {\n          if (ids[id]) continue;\n          socket = self.nsp.connected[id];\n          if (socket) {\n            sids.push(id);\n            ids[id] = true;\n          }\n        }\n      }\n    }\n  } else {\n    for (var id in self.sids) {\n      if (self.sids.hasOwnProperty(id)) {\n        socket = self.nsp.connected[id];\n        if (socket) sids.push(id);\n      }\n    }\n  }\n\n  if (fn) process.nextTick(fn.bind(null, null, sids));\n};\n\n/**\n * Gets the list of rooms a given client has joined.\n *\n * @param {String} socket id\n * @param {Function} callback\n * @api public\n */\nAdapter.prototype.clientRooms = function(id, fn){\n  var rooms = this.sids[id];\n  if (fn) process.nextTick(fn.bind(null, null, rooms ? Object.keys(rooms) : null));\n};\n\n/**\n* Room constructor.\n*\n* @api private\n*/\n\nfunction Room(){\n  if (!(this instanceof Room)) return new Room();\n  this.sockets = {};\n  this.length = 0;\n}\n\n/**\n * Adds a socket to a room.\n *\n * @param {String} socket id\n * @api private\n */\n\nRoom.prototype.add = function(id){\n  if (!this.sockets.hasOwnProperty(id)) {\n    this.sockets[id] = true;\n    this.length++;\n  }\n};\n\n/**\n * Removes a socket from a room.\n *\n * @param {String} socket id\n * @api private\n */\n\nRoom.prototype.del = function(id){\n  if (this.sockets.hasOwnProperty(id)) {\n    delete this.sockets[id];\n    this.length--;\n  }\n};\n"]},"metadata":{},"sourceType":"script"}