{"ast":null,"code":"var _jsxFileName = \"/home/subho/Programming/Internet-Technology/Athena/client/src/components/chat/chat.js\";\nimport React, { Component } from \"react\";\nimport ChatHeader from \"./chat-header\";\nimport ChatList from \"./chat-list\";\nimport \"./chat.css\";\nimport SendBar from \"./sendbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chat extends Component {\n  constructor(props) {\n    super();\n\n    this.handleDelete = user => {};\n\n    this.handleDisplay = user => {};\n\n    this.handleLogout = () => {};\n\n    this.handleUser = (u, t) => {\n      if (this.state.userlist.has(u) === false) {\n        this.setState(prevstate => ({\n          userlist: prevstate.userlist.set(u, t)\n        }));\n      }\n\n      console.log(this.state.userlist);\n    };\n\n    this.handleSend = messageBody => {\n      const receivername = this.state.receiver.username;\n      newMessage = {\n        from: this.username,\n        to: receivername,\n        content: messageBody\n      };\n      this.setState({\n        currentMessages: [...this.state.currentMessages, newMessage]\n      });\n      this.storage.set(receivername, [...this.storage.get(receivername), newMessage]);\n    };\n\n    this.storage = new Map();\n    this.state = {\n      userlist: new Map(),\n      receiver: {\n        username: \"\",\n        type: \"\"\n      },\n      currentMessages: []\n    };\n    this.username = this.props.username;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n        handleUser: this.handleUser,\n        handleLogout: this.handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-2\",\n        children: [/*#__PURE__*/_jsxDEV(ChatList, {\n          users: this.state.userlist,\n          onDelete: this.handleDelete,\n          onDisplay: this.handleDisplay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SendBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/home/subho/Programming/Internet-Technology/Athena/client/src/components/chat/chat.js"],"names":["React","Component","ChatHeader","ChatList","SendBar","Chat","constructor","props","handleDelete","user","handleDisplay","handleLogout","handleUser","u","t","state","userlist","has","setState","prevstate","set","console","log","handleSend","messageBody","receivername","receiver","username","newMessage","from","to","content","currentMessages","storage","get","Map","type","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAO,YAAP;AACA,OAAOC,OAAP,MAAoB,WAApB;;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AACzBK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf;;AADe,SAcnBC,YAdmB,GAcHC,IAAD,IAAU,CAAE,CAdR;;AAAA,SAenBC,aAfmB,GAeFD,IAAD,IAAU,CAAE,CAfT;;AAAA,SAgBnBE,YAhBmB,GAgBJ,MAAM,CAAE,CAhBJ;;AAAA,SAkBnBC,UAlBmB,GAkBN,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACnB,UAAI,KAAKC,KAAL,CAAWC,QAAX,CAAoBC,GAApB,CAAwBJ,CAAxB,MAA+B,KAAnC,EAA0C;AACtC,aAAKK,QAAL,CAAeC,SAAD,KAAgB;AAC1BH,UAAAA,QAAQ,EAAEG,SAAS,CAACH,QAAV,CAAmBI,GAAnB,CAAuBP,CAAvB,EAA0BC,CAA1B;AADgB,SAAhB,CAAd;AAGH;;AACDO,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKP,KAAL,CAAWC,QAAvB;AACH,KAzBkB;;AAAA,SA2BnBO,UA3BmB,GA2BLC,WAAD,IAAiB;AAC1B,YAAMC,YAAY,GAAG,KAAKV,KAAL,CAAWW,QAAX,CAAoBC,QAAzC;AAEAC,MAAAA,UAAU,GAAG;AACTC,QAAAA,IAAI,EAAE,KAAKF,QADF;AAETG,QAAAA,EAAE,EAAEL,YAFK;AAGTM,QAAAA,OAAO,EAAEP;AAHA,OAAb;AAMA,WAAKN,QAAL,CAAc;AACVc,QAAAA,eAAe,EAAE,CAAC,GAAG,KAAKjB,KAAL,CAAWiB,eAAf,EAAgCJ,UAAhC;AADP,OAAd;AAIA,WAAKK,OAAL,CAAab,GAAb,CAAiBK,YAAjB,EAA+B,CAC3B,GAAG,KAAKQ,OAAL,CAAaC,GAAb,CAAiBT,YAAjB,CADwB,EAE3BG,UAF2B,CAA/B;AAIH,KA5CkB;;AAEf,SAAKK,OAAL,GAAe,IAAIE,GAAJ,EAAf;AACA,SAAKpB,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,IAAImB,GAAJ,EADD;AAETT,MAAAA,QAAQ,EAAE;AACNC,QAAAA,QAAQ,EAAE,EADJ;AAENS,QAAAA,IAAI,EAAE;AAFA,OAFD;AAMTJ,MAAAA,eAAe,EAAE;AANR,KAAb;AAQA,SAAKL,QAAL,GAAgB,KAAKpB,KAAL,CAAWoB,QAA3B;AACH;;AAkCDU,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI,QAAC,UAAD;AACI,QAAA,UAAU,EAAE,KAAKzB,UADrB;AAEI,QAAA,YAAY,EAAE,KAAKD;AAFvB;AAAA;AAAA;AAAA;AAAA,cADJ,eAKI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACI,QAAC,QAAD;AACI,UAAA,KAAK,EAAE,KAAKI,KAAL,CAAWC,QADtB;AAEI,UAAA,QAAQ,EAAE,KAAKR,YAFnB;AAGI,UAAA,SAAS,EAAE,KAAKE;AAHpB;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAgBH;;AAhEwB;;AAmE7B,eAAeL,IAAf","sourcesContent":["import React, { Component } from \"react\"\nimport ChatHeader from \"./chat-header\"\nimport ChatList from \"./chat-list\"\nimport \"./chat.css\"\nimport SendBar from \"./sendbar\"\n\nclass Chat extends Component {\n    constructor(props) {\n        super()\n        this.storage = new Map()\n        this.state = {\n            userlist: new Map(),\n            receiver: {\n                username: \"\",\n                type: \"\",\n            },\n            currentMessages: [],\n        }\n        this.username = this.props.username\n    }\n\n    handleDelete = (user) => {}\n    handleDisplay = (user) => {}\n    handleLogout = () => {}\n\n    handleUser = (u, t) => {\n        if (this.state.userlist.has(u) === false) {\n            this.setState((prevstate) => ({\n                userlist: prevstate.userlist.set(u, t),\n            }))\n        }\n        console.log(this.state.userlist)\n    }\n\n    handleSend = (messageBody) => {\n        const receivername = this.state.receiver.username\n\n        newMessage = {\n            from: this.username,\n            to: receivername,\n            content: messageBody,\n        }\n\n        this.setState({\n            currentMessages: [...this.state.currentMessages, newMessage],\n        })\n\n        this.storage.set(receivername, [\n            ...this.storage.get(receivername),\n            newMessage,\n        ])\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <ChatHeader\n                    handleUser={this.handleUser}\n                    handleLogout={this.handleLogout}\n                />\n                <div className=\"section-2\">\n                    <ChatList\n                        users={this.state.userlist}\n                        onDelete={this.handleDelete}\n                        onDisplay={this.handleDisplay}\n                    />\n                    <SendBar />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}