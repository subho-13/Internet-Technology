{"ast":null,"code":"var _jsxFileName = \"/home/subho/Programming/Internet-Technology/Athena/client/src/components/chat/sendbar.js\";\nimport React, { Component } from \"react\";\nimport \"./sendbar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass SendBar extends Component {\n  constructor() {\n    super();\n\n    this.onSubmit = event => {\n      event.preventDefault();\n      this.props.handleSend({\n        type: this.state.type,\n        content: this.state.content,\n        filename: \"Upload...\"\n      });\n      this.setState({\n        content: \"\"\n      });\n    };\n\n    this.handleOptionClick = () => {\n      if (this.state.type === \"text\") {\n        this.setState({\n          type: \"image\",\n          optionButtonName: \"Image\"\n        });\n      } else {\n        this.setState({\n          type: \"text\",\n          optionButtonName: \"Text\"\n        });\n      }\n    };\n\n    this.handleTextContent = event => {\n      this.setState({\n        content: event.target.value\n      });\n    };\n\n    this.getTextForm = () => {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        className: \"sendbar-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"image\",\n          value: this.state.content,\n          onChange: this.handleTextContent,\n          className: \"sendbar-text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Send\",\n          className: \"sendbar-send-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.handleImageFile = event => {\n      const reader = new FileReader();\n\n      reader.onloadend = () => {\n        this.setState({\n          content: reader.result\n        });\n      };\n\n      reader.readAsDataURL(event.target.files[0]);\n    };\n\n    this.getImgForm = () => {\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.onSubmit,\n        className: \"sendbar-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"sendbar-image\",\n          children: [\"Upload\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            name: \"image\",\n            onChange: this.handleImageFile\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Send\",\n          className: \"sendbar-send-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this);\n    };\n\n    this.state = {\n      type: \"text\",\n      content: \"\",\n      optionButtonName: \"Text\"\n    };\n  }\n\n  render() {\n    let sendform;\n\n    if (this.state.type === \"text\") {\n      sendform = this.getTextForm();\n    } else if (this.state.type === \"image\") {\n      sendform = this.getImgForm();\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sendbar\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleOptionClick,\n        className: \"sendbar-option-button\",\n        children: this.state.optionButtonName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this), sendform]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SendBar;","map":{"version":3,"sources":["/home/subho/Programming/Internet-Technology/Athena/client/src/components/chat/sendbar.js"],"names":["React","Component","SendBar","constructor","onSubmit","event","preventDefault","props","handleSend","type","state","content","filename","setState","handleOptionClick","optionButtonName","handleTextContent","target","value","getTextForm","handleImageFile","reader","FileReader","onloadend","result","readAsDataURL","files","getImgForm","render","sendform"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport \"./sendbar.css\"\n\nclass SendBar extends Component {\n    constructor() {\n        super()\n        this.state = {\n            type: \"text\",\n            content: \"\",\n            optionButtonName: \"Text\",\n        }\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault()\n        this.props.handleSend({\n            type: this.state.type,\n            content: this.state.content,\n            filename: \"Upload...\",\n        })\n        this.setState({ content: \"\" })\n    }\n\n    handleOptionClick = () => {\n        if (this.state.type === \"text\") {\n            this.setState({ type: \"image\", optionButtonName: \"Image\" })\n        } else {\n            this.setState({ type: \"text\", optionButtonName: \"Text\" })\n        }\n    }\n\n    handleTextContent = (event) => {\n        this.setState({ content: event.target.value })\n    }\n\n    getTextForm = () => {\n        return (\n            <form onSubmit={this.onSubmit} className=\"sendbar-form\">\n                <input\n                    type=\"text\"\n                    name=\"image\"\n                    value={this.state.content}\n                    onChange={this.handleTextContent}\n                    className=\"sendbar-text\"\n                />\n                <input\n                    type=\"submit\"\n                    value=\"Send\"\n                    className=\"sendbar-send-button\"\n                />\n            </form>\n        )\n    }\n\n    handleImageFile = (event) => {\n        const reader = new FileReader()\n\n        reader.onloadend = () => {\n            this.setState({ content: reader.result })\n        }\n\n        reader.readAsDataURL(event.target.files[0])\n    }\n\n    getImgForm = () => {\n        return (\n            <form onSubmit={this.onSubmit} className=\"sendbar-form\">\n                <label className=\"sendbar-image\">\n                    Upload\n                    <input\n                        type=\"file\"\n                        name=\"image\"\n                        onChange={this.handleImageFile}\n                    />\n                </label>\n                <input\n                    type=\"submit\"\n                    value=\"Send\"\n                    className=\"sendbar-send-button\"\n                />\n            </form>\n        )\n    }\n\n    render() {\n        let sendform\n\n        if (this.state.type === \"text\") {\n            sendform = this.getTextForm()\n        } else if (this.state.type === \"image\") {\n            sendform = this.getImgForm()\n        }\n\n        return (\n            <div className=\"sendbar\">\n                <button\n                    onClick={this.handleOptionClick}\n                    className=\"sendbar-option-button\"\n                >\n                    {this.state.optionButtonName}\n                </button>\n                {sendform}\n            </div>\n        )\n    }\n}\n\nexport default SendBar\n"]},"metadata":{},"sourceType":"module"}