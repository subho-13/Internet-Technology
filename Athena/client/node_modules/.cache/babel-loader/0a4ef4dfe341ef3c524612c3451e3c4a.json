{"ast":null,"code":"/**\n * Module dependencies.\n */\nvar Emitter = require('events').EventEmitter;\n\nvar parser = require('socket.io-parser');\n\nvar url = require('url');\n\nvar debug = require('debug')('socket.io:socket');\n\nvar hasBin = require('has-binary');\n\nvar assign = require('object-assign');\n/**\n * Module exports.\n */\n\n\nmodule.exports = exports = Socket;\n/**\n * Blacklisted events.\n *\n * @api public\n */\n\nexports.events = ['error', 'connect', 'disconnect', 'disconnecting', 'newListener', 'removeListener'];\n/**\n * Flags.\n *\n * @api private\n */\n\nvar flags = ['json', 'volatile', 'broadcast'];\n/**\n * `EventEmitter#emit` reference.\n */\n\nvar emit = Emitter.prototype.emit;\n/**\n * Interface to a `Client` for a given `Namespace`.\n *\n * @param {Namespace} nsp\n * @param {Client} client\n * @api public\n */\n\nfunction Socket(nsp, client, query) {\n  this.nsp = nsp;\n  this.server = nsp.server;\n  this.adapter = this.nsp.adapter;\n  this.id = nsp.name !== '/' ? nsp.name + '#' + client.id : client.id;\n  this.client = client;\n  this.conn = client.conn;\n  this.rooms = {};\n  this.acks = {};\n  this.connected = true;\n  this.disconnected = false;\n  this.handshake = this.buildHandshake(query);\n  this.fns = [];\n}\n/**\n * Inherits from `EventEmitter`.\n */\n\n\nSocket.prototype.__proto__ = Emitter.prototype;\n/**\n * Apply flags from `Socket`.\n */\n\nflags.forEach(function (flag) {\n  Object.defineProperty(Socket.prototype, flag, {\n    get: function () {\n      this.flags = this.flags || {};\n      this.flags[flag] = true;\n      return this;\n    }\n  });\n});\n/**\n * `request` engine.io shortcut.\n *\n * @api public\n */\n\nObject.defineProperty(Socket.prototype, 'request', {\n  get: function () {\n    return this.conn.request;\n  }\n});\n/**\n * Builds the `handshake` BC object\n *\n * @api private\n */\n\nSocket.prototype.buildHandshake = function (query) {\n  var self = this;\n\n  function buildQuery() {\n    var requestQuery = url.parse(self.request.url, true).query; //if socket-specific query exist, replace query strings in requestQuery\n\n    return assign({}, query, requestQuery);\n  }\n\n  return {\n    headers: this.request.headers,\n    time: new Date() + '',\n    address: this.conn.remoteAddress,\n    xdomain: !!this.request.headers.origin,\n    secure: !!this.request.connection.encrypted,\n    issued: +new Date(),\n    url: this.request.url,\n    query: buildQuery()\n  };\n};\n/**\n * Emits to this client.\n *\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.emit = function (ev) {\n  if (~exports.events.indexOf(ev)) {\n    emit.apply(this, arguments);\n  } else {\n    var args = Array.prototype.slice.call(arguments);\n    var packet = {};\n    packet.type = hasBin(args) ? parser.BINARY_EVENT : parser.EVENT;\n    packet.data = args;\n    var flags = this.flags || {}; // access last argument to see if it's an ACK callback\n\n    if ('function' == typeof args[args.length - 1]) {\n      if (this._rooms || flags.broadcast) {\n        throw new Error('Callbacks are not supported when broadcasting');\n      }\n\n      debug('emitting packet with ack id %d', this.nsp.ids);\n      this.acks[this.nsp.ids] = args.pop();\n      packet.id = this.nsp.ids++;\n    }\n\n    if (this._rooms || flags.broadcast) {\n      this.adapter.broadcast(packet, {\n        except: [this.id],\n        rooms: this._rooms,\n        flags: flags\n      });\n    } else {\n      // dispatch packet\n      this.packet(packet, {\n        volatile: flags.volatile,\n        compress: flags.compress\n      });\n    } // reset flags\n\n\n    delete this._rooms;\n    delete this.flags;\n  }\n\n  return this;\n};\n/**\n * Targets a room when broadcasting.\n *\n * @param {String} name\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.to = Socket.prototype.in = function (name) {\n  this._rooms = this._rooms || [];\n  if (!~this._rooms.indexOf(name)) this._rooms.push(name);\n  return this;\n};\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.send = Socket.prototype.write = function () {\n  var args = Array.prototype.slice.call(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n/**\n * Writes a packet.\n *\n * @param {Object} packet object\n * @param {Object} opts options\n * @api private\n */\n\n\nSocket.prototype.packet = function (packet, opts) {\n  packet.nsp = this.nsp.name;\n  opts = opts || {};\n  opts.compress = false !== opts.compress;\n  this.client.packet(packet, opts);\n};\n/**\n * Joins a room.\n *\n * @param {String} room\n * @param {Function} fn optional, callback\n * @return {Socket} self\n * @api private\n */\n\n\nSocket.prototype.join = function (room, fn) {\n  debug('joining room %s', room);\n  var self = this;\n\n  if (this.rooms.hasOwnProperty(room)) {\n    fn && fn(null);\n    return this;\n  }\n\n  this.adapter.add(this.id, room, function (err) {\n    if (err) return fn && fn(err);\n    debug('joined room %s', room);\n    self.rooms[room] = room;\n    fn && fn(null);\n  });\n  return this;\n};\n/**\n * Leaves a room.\n *\n * @param {String} room\n * @param {Function} fn optional, callback\n * @return {Socket} self\n * @api private\n */\n\n\nSocket.prototype.leave = function (room, fn) {\n  debug('leave room %s', room);\n  var self = this;\n  this.adapter.del(this.id, room, function (err) {\n    if (err) return fn && fn(err);\n    debug('left room %s', room);\n    delete self.rooms[room];\n    fn && fn(null);\n  });\n  return this;\n};\n/**\n * Leave all rooms.\n *\n * @api private\n */\n\n\nSocket.prototype.leaveAll = function () {\n  this.adapter.delAll(this.id);\n  this.rooms = {};\n};\n/**\n * Called by `Namespace` upon successful\n * middleware execution (ie: authorization).\n * Socket is added to namespace array before\n * call to join, so adapters can access it.\n *\n * @api private\n */\n\n\nSocket.prototype.onconnect = function () {\n  debug('socket connected - writing packet');\n  this.nsp.connected[this.id] = this;\n  this.join(this.id);\n  this.packet({\n    type: parser.CONNECT\n  });\n};\n/**\n * Called with each packet. Called by `Client`.\n *\n * @param {Object} packet\n * @api private\n */\n\n\nSocket.prototype.onpacket = function (packet) {\n  debug('got packet %j', packet);\n\n  switch (packet.type) {\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n  }\n};\n/**\n * Called upon event packet.\n *\n * @param {Object} packet object\n * @api private\n */\n\n\nSocket.prototype.onevent = function (packet) {\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  this.dispatch(args);\n};\n/**\n * Produces an ack callback to emit with an event.\n *\n * @param {Number} id packet id\n * @api private\n */\n\n\nSocket.prototype.ack = function (id) {\n  var self = this;\n  var sent = false;\n  return function () {\n    // prevent double callbacks\n    if (sent) return;\n    var args = Array.prototype.slice.call(arguments);\n    debug('sending ack %j', args);\n    var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\n    self.packet({\n      id: id,\n      type: type,\n      data: args\n    });\n    sent = true;\n  };\n};\n/**\n * Called upon ack packet.\n *\n * @api private\n */\n\n\nSocket.prototype.onack = function (packet) {\n  var ack = this.acks[packet.id];\n\n  if ('function' == typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n/**\n * Called upon client disconnect packet.\n *\n * @api private\n */\n\n\nSocket.prototype.ondisconnect = function () {\n  debug('got disconnect packet');\n  this.onclose('client namespace disconnect');\n};\n/**\n * Handles a client error.\n *\n * @api private\n */\n\n\nSocket.prototype.onerror = function (err) {\n  if (this.listeners('error').length) {\n    this.emit('error', err);\n  } else {\n    console.error('Missing error handler on `socket`.');\n    console.error(err.stack);\n  }\n};\n/**\n * Called upon closing. Called by `Client`.\n *\n * @param {String} reason\n * @throw {Error} optional error object\n * @api private\n */\n\n\nSocket.prototype.onclose = function (reason) {\n  if (!this.connected) return this;\n  debug('closing socket - reason %s', reason);\n  this.emit('disconnecting', reason);\n  this.leaveAll();\n  this.nsp.remove(this);\n  this.client.remove(this);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.nsp.connected[this.id];\n  this.emit('disconnect', reason);\n};\n/**\n * Produces an `error` packet.\n *\n * @param {Object} err error object\n * @api private\n */\n\n\nSocket.prototype.error = function (err) {\n  this.packet({\n    type: parser.ERROR,\n    data: err\n  });\n};\n/**\n * Disconnects this client.\n *\n * @param {Boolean} close if `true`, closes the underlying connection\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.disconnect = function (close) {\n  if (!this.connected) return this;\n\n  if (close) {\n    this.client.disconnect();\n  } else {\n    this.packet({\n      type: parser.DISCONNECT\n    });\n    this.onclose('server namespace disconnect');\n  }\n\n  return this;\n};\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} compress if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.compress = function (compress) {\n  this.flags = this.flags || {};\n  this.flags.compress = compress;\n  return this;\n};\n/**\n * Dispatch incoming event to socket listeners.\n *\n * @param {Array} event that will get emitted\n * @api private\n */\n\n\nSocket.prototype.dispatch = function (event) {\n  debug('dispatching an event %j', event);\n  var self = this;\n  this.run(event, function (err) {\n    process.nextTick(function () {\n      if (err) {\n        return self.error(err.data || err.message);\n      }\n\n      emit.apply(self, event);\n    });\n  });\n};\n/**\n * Sets up socket middleware.\n *\n * @param {Function} middleware function (event, next)\n * @return {Socket} self\n * @api public\n */\n\n\nSocket.prototype.use = function (fn) {\n  this.fns.push(fn);\n  return this;\n};\n/**\n * Executes the middleware for an incoming event.\n *\n * @param {Array} event that will get emitted\n * @param {Function} last fn call in the middleware\n * @api private\n */\n\n\nSocket.prototype.run = function (event, fn) {\n  var fns = this.fns.slice(0);\n  if (!fns.length) return fn(null);\n\n  function run(i) {\n    fns[i](event, function (err) {\n      // upon error, short-circuit\n      if (err) return fn(err); // if no middleware left, summon callback\n\n      if (!fns[i + 1]) return fn(null); // go on to next\n\n      run(i + 1);\n    });\n  }\n\n  run(0);\n};","map":{"version":3,"sources":["/home/subho/Programming/Internet-Technology/Athena/node_modules/socket.io/lib/socket.js"],"names":["Emitter","require","EventEmitter","parser","url","debug","hasBin","assign","module","exports","Socket","events","flags","emit","prototype","nsp","client","query","server","adapter","id","name","conn","rooms","acks","connected","disconnected","handshake","buildHandshake","fns","__proto__","forEach","flag","Object","defineProperty","get","request","self","buildQuery","requestQuery","parse","headers","time","Date","address","remoteAddress","xdomain","origin","secure","connection","encrypted","issued","ev","indexOf","apply","arguments","args","Array","slice","call","packet","type","BINARY_EVENT","EVENT","data","length","_rooms","broadcast","Error","ids","pop","except","volatile","compress","to","in","push","send","write","unshift","opts","join","room","fn","hasOwnProperty","add","err","leave","del","leaveAll","delAll","onconnect","CONNECT","onpacket","onevent","ACK","onack","BINARY_ACK","DISCONNECT","ondisconnect","ERROR","ack","dispatch","sent","onclose","onerror","listeners","console","error","stack","reason","remove","disconnect","close","event","run","process","nextTick","message","use","i"],"mappings":"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","sourcesContent":["\n/**\n * Module dependencies.\n */\n\nvar Emitter = require('events').EventEmitter;\nvar parser = require('socket.io-parser');\nvar url = require('url');\nvar debug = require('debug')('socket.io:socket');\nvar hasBin = require('has-binary');\nvar assign = require('object-assign');\n\n/**\n * Module exports.\n */\n\nmodule.exports = exports = Socket;\n\n/**\n * Blacklisted events.\n *\n * @api public\n */\n\nexports.events = [\n  'error',\n  'connect',\n  'disconnect',\n  'disconnecting',\n  'newListener',\n  'removeListener'\n];\n\n/**\n * Flags.\n *\n * @api private\n */\n\nvar flags = [\n  'json',\n  'volatile',\n  'broadcast'\n];\n\n/**\n * `EventEmitter#emit` reference.\n */\n\nvar emit = Emitter.prototype.emit;\n\n/**\n * Interface to a `Client` for a given `Namespace`.\n *\n * @param {Namespace} nsp\n * @param {Client} client\n * @api public\n */\n\nfunction Socket(nsp, client, query){\n  this.nsp = nsp;\n  this.server = nsp.server;\n  this.adapter = this.nsp.adapter;\n  this.id = nsp.name !== '/' ? nsp.name + '#' + client.id : client.id;\n  this.client = client;\n  this.conn = client.conn;\n  this.rooms = {};\n  this.acks = {};\n  this.connected = true;\n  this.disconnected = false;\n  this.handshake = this.buildHandshake(query);\n  this.fns = [];\n}\n\n/**\n * Inherits from `EventEmitter`.\n */\n\nSocket.prototype.__proto__ = Emitter.prototype;\n\n/**\n * Apply flags from `Socket`.\n */\n\nflags.forEach(function(flag){\n  Object.defineProperty(Socket.prototype, flag, {\n    get: function() {\n      this.flags = this.flags || {};\n      this.flags[flag] = true;\n      return this;\n    }\n  });\n});\n\n/**\n * `request` engine.io shortcut.\n *\n * @api public\n */\n\nObject.defineProperty(Socket.prototype, 'request', {\n  get: function() {\n    return this.conn.request;\n  }\n});\n\n/**\n * Builds the `handshake` BC object\n *\n * @api private\n */\n\nSocket.prototype.buildHandshake = function(query){\n  var self = this;\n  function buildQuery(){\n    var requestQuery = url.parse(self.request.url, true).query;\n    //if socket-specific query exist, replace query strings in requestQuery\n    return assign({}, query, requestQuery);\n  }\n  return {\n    headers: this.request.headers,\n    time: (new Date) + '',\n    address: this.conn.remoteAddress,\n    xdomain: !!this.request.headers.origin,\n    secure: !!this.request.connection.encrypted,\n    issued: +(new Date),\n    url: this.request.url,\n    query: buildQuery()\n  };\n};\n\n/**\n * Emits to this client.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.emit = function(ev){\n  if (~exports.events.indexOf(ev)) {\n    emit.apply(this, arguments);\n  } else {\n    var args = Array.prototype.slice.call(arguments);\n    var packet = {};\n    packet.type = hasBin(args) ? parser.BINARY_EVENT : parser.EVENT;\n    packet.data = args;\n    var flags = this.flags || {};\n\n    // access last argument to see if it's an ACK callback\n    if ('function' == typeof args[args.length - 1]) {\n      if (this._rooms || flags.broadcast) {\n        throw new Error('Callbacks are not supported when broadcasting');\n      }\n\n      debug('emitting packet with ack id %d', this.nsp.ids);\n      this.acks[this.nsp.ids] = args.pop();\n      packet.id = this.nsp.ids++;\n    }\n\n    if (this._rooms || flags.broadcast) {\n      this.adapter.broadcast(packet, {\n        except: [this.id],\n        rooms: this._rooms,\n        flags: flags\n      });\n    } else {\n      // dispatch packet\n      this.packet(packet, {\n        volatile: flags.volatile,\n        compress: flags.compress\n      });\n    }\n\n    // reset flags\n    delete this._rooms;\n    delete this.flags;\n  }\n  return this;\n};\n\n/**\n * Targets a room when broadcasting.\n *\n * @param {String} name\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.to =\nSocket.prototype.in = function(name){\n  this._rooms = this._rooms || [];\n  if (!~this._rooms.indexOf(name)) this._rooms.push(name);\n  return this;\n};\n\n/**\n * Sends a `message` event.\n *\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.send =\nSocket.prototype.write = function(){\n  var args = Array.prototype.slice.call(arguments);\n  args.unshift('message');\n  this.emit.apply(this, args);\n  return this;\n};\n\n/**\n * Writes a packet.\n *\n * @param {Object} packet object\n * @param {Object} opts options\n * @api private\n */\n\nSocket.prototype.packet = function(packet, opts){\n  packet.nsp = this.nsp.name;\n  opts = opts || {};\n  opts.compress = false !== opts.compress;\n  this.client.packet(packet, opts);\n};\n\n/**\n * Joins a room.\n *\n * @param {String} room\n * @param {Function} fn optional, callback\n * @return {Socket} self\n * @api private\n */\n\nSocket.prototype.join = function(room, fn){\n  debug('joining room %s', room);\n  var self = this;\n  if (this.rooms.hasOwnProperty(room)) {\n    fn && fn(null);\n    return this;\n  }\n  this.adapter.add(this.id, room, function(err){\n    if (err) return fn && fn(err);\n    debug('joined room %s', room);\n    self.rooms[room] = room;\n    fn && fn(null);\n  });\n  return this;\n};\n\n/**\n * Leaves a room.\n *\n * @param {String} room\n * @param {Function} fn optional, callback\n * @return {Socket} self\n * @api private\n */\n\nSocket.prototype.leave = function(room, fn){\n  debug('leave room %s', room);\n  var self = this;\n  this.adapter.del(this.id, room, function(err){\n    if (err) return fn && fn(err);\n    debug('left room %s', room);\n    delete self.rooms[room];\n    fn && fn(null);\n  });\n  return this;\n};\n\n/**\n * Leave all rooms.\n *\n * @api private\n */\n\nSocket.prototype.leaveAll = function(){\n  this.adapter.delAll(this.id);\n  this.rooms = {};\n};\n\n/**\n * Called by `Namespace` upon successful\n * middleware execution (ie: authorization).\n * Socket is added to namespace array before\n * call to join, so adapters can access it.\n *\n * @api private\n */\n\nSocket.prototype.onconnect = function(){\n  debug('socket connected - writing packet');\n  this.nsp.connected[this.id] = this;\n  this.join(this.id);\n  this.packet({ type: parser.CONNECT });\n};\n\n/**\n * Called with each packet. Called by `Client`.\n *\n * @param {Object} packet\n * @api private\n */\n\nSocket.prototype.onpacket = function(packet){\n  debug('got packet %j', packet);\n  switch (packet.type) {\n    case parser.EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.BINARY_EVENT:\n      this.onevent(packet);\n      break;\n\n    case parser.ACK:\n      this.onack(packet);\n      break;\n\n    case parser.BINARY_ACK:\n      this.onack(packet);\n      break;\n\n    case parser.DISCONNECT:\n      this.ondisconnect();\n      break;\n\n    case parser.ERROR:\n      this.emit('error', packet.data);\n  }\n};\n\n/**\n * Called upon event packet.\n *\n * @param {Object} packet object\n * @api private\n */\n\nSocket.prototype.onevent = function(packet){\n  var args = packet.data || [];\n  debug('emitting event %j', args);\n\n  if (null != packet.id) {\n    debug('attaching ack callback to event');\n    args.push(this.ack(packet.id));\n  }\n\n  this.dispatch(args);\n};\n\n/**\n * Produces an ack callback to emit with an event.\n *\n * @param {Number} id packet id\n * @api private\n */\n\nSocket.prototype.ack = function(id){\n  var self = this;\n  var sent = false;\n  return function(){\n    // prevent double callbacks\n    if (sent) return;\n    var args = Array.prototype.slice.call(arguments);\n    debug('sending ack %j', args);\n\n    var type = hasBin(args) ? parser.BINARY_ACK : parser.ACK;\n    self.packet({\n      id: id,\n      type: type,\n      data: args\n    });\n\n    sent = true;\n  };\n};\n\n/**\n * Called upon ack packet.\n *\n * @api private\n */\n\nSocket.prototype.onack = function(packet){\n  var ack = this.acks[packet.id];\n  if ('function' == typeof ack) {\n    debug('calling ack %s with %j', packet.id, packet.data);\n    ack.apply(this, packet.data);\n    delete this.acks[packet.id];\n  } else {\n    debug('bad ack %s', packet.id);\n  }\n};\n\n/**\n * Called upon client disconnect packet.\n *\n * @api private\n */\n\nSocket.prototype.ondisconnect = function(){\n  debug('got disconnect packet');\n  this.onclose('client namespace disconnect');\n};\n\n/**\n * Handles a client error.\n *\n * @api private\n */\n\nSocket.prototype.onerror = function(err){\n  if (this.listeners('error').length) {\n    this.emit('error', err);\n  } else {\n    console.error('Missing error handler on `socket`.');\n    console.error(err.stack);\n  }\n};\n\n/**\n * Called upon closing. Called by `Client`.\n *\n * @param {String} reason\n * @throw {Error} optional error object\n * @api private\n */\n\nSocket.prototype.onclose = function(reason){\n  if (!this.connected) return this;\n  debug('closing socket - reason %s', reason);\n  this.emit('disconnecting', reason);\n  this.leaveAll();\n  this.nsp.remove(this);\n  this.client.remove(this);\n  this.connected = false;\n  this.disconnected = true;\n  delete this.nsp.connected[this.id];\n  this.emit('disconnect', reason);\n};\n\n/**\n * Produces an `error` packet.\n *\n * @param {Object} err error object\n * @api private\n */\n\nSocket.prototype.error = function(err){\n  this.packet({ type: parser.ERROR, data: err });\n};\n\n/**\n * Disconnects this client.\n *\n * @param {Boolean} close if `true`, closes the underlying connection\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.disconnect = function(close){\n  if (!this.connected) return this;\n  if (close) {\n    this.client.disconnect();\n  } else {\n    this.packet({ type: parser.DISCONNECT });\n    this.onclose('server namespace disconnect');\n  }\n  return this;\n};\n\n/**\n * Sets the compress flag.\n *\n * @param {Boolean} compress if `true`, compresses the sending data\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.compress = function(compress){\n  this.flags = this.flags || {};\n  this.flags.compress = compress;\n  return this;\n};\n\n/**\n * Dispatch incoming event to socket listeners.\n *\n * @param {Array} event that will get emitted\n * @api private\n */\n\nSocket.prototype.dispatch = function(event){\n  debug('dispatching an event %j', event);\n  var self = this;\n  this.run(event, function(err){\n    process.nextTick(function(){\n      if (err) {\n        return self.error(err.data || err.message);\n      }\n      emit.apply(self, event);\n    });\n  });\n}\n\n/**\n * Sets up socket middleware.\n *\n * @param {Function} middleware function (event, next)\n * @return {Socket} self\n * @api public\n */\n\nSocket.prototype.use = function(fn){\n  this.fns.push(fn);\n  return this;\n};\n\n/**\n * Executes the middleware for an incoming event.\n *\n * @param {Array} event that will get emitted\n * @param {Function} last fn call in the middleware\n * @api private\n */\nSocket.prototype.run = function(event, fn){\n  var fns = this.fns.slice(0);\n  if (!fns.length) return fn(null);\n\n  function run(i){\n    fns[i](event, function(err){\n      // upon error, short-circuit\n      if (err) return fn(err);\n\n      // if no middleware left, summon callback\n      if (!fns[i + 1]) return fn(null);\n\n      // go on to next\n      run(i + 1);\n    });\n  }\n\n  run(0);\n};\n"]},"metadata":{},"sourceType":"script"}