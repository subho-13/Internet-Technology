{"ast":null,"code":"/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\nexports.BufferUtil = {\n  merge: function (mergedBuffer, buffers) {\n    var offset = 0;\n\n    for (var i = 0, l = buffers.length; i < l; ++i) {\n      var buf = buffers[i];\n      buf.copy(mergedBuffer, offset);\n      offset += buf.length;\n    }\n  },\n  mask: function (source, mask, output, offset, length) {\n    var maskNum = mask.readUInt32LE(0, true);\n    var i = 0;\n\n    for (; i < length - 3; i += 4) {\n      var num = maskNum ^ source.readUInt32LE(i, true);\n      if (num < 0) num = 4294967296 + num;\n      output.writeUInt32LE(num, offset + i, true);\n    }\n\n    switch (length % 4) {\n      case 3:\n        output[offset + i + 2] = source[i + 2] ^ mask[2];\n\n      case 2:\n        output[offset + i + 1] = source[i + 1] ^ mask[1];\n\n      case 1:\n        output[offset + i] = source[i] ^ mask[0];\n\n      case 0:\n        ;\n    }\n  },\n  unmask: function (data, mask) {\n    var maskNum = mask.readUInt32LE(0, true);\n    var length = data.length;\n    var i = 0;\n\n    for (; i < length - 3; i += 4) {\n      var num = maskNum ^ data.readUInt32LE(i, true);\n      if (num < 0) num = 4294967296 + num;\n      data.writeUInt32LE(num, i, true);\n    }\n\n    switch (length % 4) {\n      case 3:\n        data[i + 2] = data[i + 2] ^ mask[2];\n\n      case 2:\n        data[i + 1] = data[i + 1] ^ mask[1];\n\n      case 1:\n        data[i] = data[i] ^ mask[0];\n\n      case 0:\n        ;\n    }\n  }\n};","map":{"version":3,"sources":["/home/subho/Programming/Internet-Technology/Athena/node_modules/ws/lib/BufferUtil.fallback.js"],"names":["exports","BufferUtil","merge","mergedBuffer","buffers","offset","i","l","length","buf","copy","mask","source","output","maskNum","readUInt32LE","num","writeUInt32LE","unmask","data"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEAA,OAAO,CAACC,UAAR,GAAqB;AACnBC,EAAAA,KAAK,EAAE,UAASC,YAAT,EAAuBC,OAAvB,EAAgC;AACrC,QAAIC,MAAM,GAAG,CAAb;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,CAAC,GAAGH,OAAO,CAACI,MAA5B,EAAoCF,CAAC,GAAGC,CAAxC,EAA2C,EAAED,CAA7C,EAAgD;AAC9C,UAAIG,GAAG,GAAGL,OAAO,CAACE,CAAD,CAAjB;AACAG,MAAAA,GAAG,CAACC,IAAJ,CAASP,YAAT,EAAuBE,MAAvB;AACAA,MAAAA,MAAM,IAAII,GAAG,CAACD,MAAd;AACD;AACF,GARkB;AASnBG,EAAAA,IAAI,EAAE,UAASC,MAAT,EAAiBD,IAAjB,EAAuBE,MAAvB,EAA+BR,MAA/B,EAAuCG,MAAvC,EAA+C;AACnD,QAAIM,OAAO,GAAGH,IAAI,CAACI,YAAL,CAAkB,CAAlB,EAAqB,IAArB,CAAd;AACA,QAAIT,CAAC,GAAG,CAAR;;AACA,WAAOA,CAAC,GAAGE,MAAM,GAAG,CAApB,EAAuBF,CAAC,IAAI,CAA5B,EAA+B;AAC7B,UAAIU,GAAG,GAAGF,OAAO,GAAGF,MAAM,CAACG,YAAP,CAAoBT,CAApB,EAAuB,IAAvB,CAApB;AACA,UAAIU,GAAG,GAAG,CAAV,EAAaA,GAAG,GAAG,aAAaA,GAAnB;AACbH,MAAAA,MAAM,CAACI,aAAP,CAAqBD,GAArB,EAA0BX,MAAM,GAAGC,CAAnC,EAAsC,IAAtC;AACD;;AACD,YAAQE,MAAM,GAAG,CAAjB;AACE,WAAK,CAAL;AAAQK,QAAAA,MAAM,CAACR,MAAM,GAAGC,CAAT,GAAa,CAAd,CAAN,GAAyBM,MAAM,CAACN,CAAC,GAAG,CAAL,CAAN,GAAgBK,IAAI,CAAC,CAAD,CAA7C;;AACR,WAAK,CAAL;AAAQE,QAAAA,MAAM,CAACR,MAAM,GAAGC,CAAT,GAAa,CAAd,CAAN,GAAyBM,MAAM,CAACN,CAAC,GAAG,CAAL,CAAN,GAAgBK,IAAI,CAAC,CAAD,CAA7C;;AACR,WAAK,CAAL;AAAQE,QAAAA,MAAM,CAACR,MAAM,GAAGC,CAAV,CAAN,GAAqBM,MAAM,CAACN,CAAD,CAAN,GAAYK,IAAI,CAAC,CAAD,CAArC;;AACR,WAAK,CAAL;AAAO;AAJT;AAMD,GAvBkB;AAwBnBO,EAAAA,MAAM,EAAE,UAASC,IAAT,EAAeR,IAAf,EAAqB;AAC3B,QAAIG,OAAO,GAAGH,IAAI,CAACI,YAAL,CAAkB,CAAlB,EAAqB,IAArB,CAAd;AACA,QAAIP,MAAM,GAAGW,IAAI,CAACX,MAAlB;AACA,QAAIF,CAAC,GAAG,CAAR;;AACA,WAAOA,CAAC,GAAGE,MAAM,GAAG,CAApB,EAAuBF,CAAC,IAAI,CAA5B,EAA+B;AAC7B,UAAIU,GAAG,GAAGF,OAAO,GAAGK,IAAI,CAACJ,YAAL,CAAkBT,CAAlB,EAAqB,IAArB,CAApB;AACA,UAAIU,GAAG,GAAG,CAAV,EAAaA,GAAG,GAAG,aAAaA,GAAnB;AACbG,MAAAA,IAAI,CAACF,aAAL,CAAmBD,GAAnB,EAAwBV,CAAxB,EAA2B,IAA3B;AACD;;AACD,YAAQE,MAAM,GAAG,CAAjB;AACE,WAAK,CAAL;AAAQW,QAAAA,IAAI,CAACb,CAAC,GAAG,CAAL,CAAJ,GAAca,IAAI,CAACb,CAAC,GAAG,CAAL,CAAJ,GAAcK,IAAI,CAAC,CAAD,CAAhC;;AACR,WAAK,CAAL;AAAQQ,QAAAA,IAAI,CAACb,CAAC,GAAG,CAAL,CAAJ,GAAca,IAAI,CAACb,CAAC,GAAG,CAAL,CAAJ,GAAcK,IAAI,CAAC,CAAD,CAAhC;;AACR,WAAK,CAAL;AAAQQ,QAAAA,IAAI,CAACb,CAAD,CAAJ,GAAUa,IAAI,CAACb,CAAD,CAAJ,GAAUK,IAAI,CAAC,CAAD,CAAxB;;AACR,WAAK,CAAL;AAAO;AAJT;AAMD;AAvCkB,CAArB","sourcesContent":["/*!\n * ws: a node.js websocket client\n * Copyright(c) 2011 Einar Otto Stangvik <einaros@gmail.com>\n * MIT Licensed\n */\n\nexports.BufferUtil = {\n  merge: function(mergedBuffer, buffers) {\n    var offset = 0;\n    for (var i = 0, l = buffers.length; i < l; ++i) {\n      var buf = buffers[i];\n      buf.copy(mergedBuffer, offset);\n      offset += buf.length;\n    }\n  },\n  mask: function(source, mask, output, offset, length) {\n    var maskNum = mask.readUInt32LE(0, true);\n    var i = 0;\n    for (; i < length - 3; i += 4) {\n      var num = maskNum ^ source.readUInt32LE(i, true);\n      if (num < 0) num = 4294967296 + num;\n      output.writeUInt32LE(num, offset + i, true);\n    }\n    switch (length % 4) {\n      case 3: output[offset + i + 2] = source[i + 2] ^ mask[2];\n      case 2: output[offset + i + 1] = source[i + 1] ^ mask[1];\n      case 1: output[offset + i] = source[i] ^ mask[0];\n      case 0:;\n    }\n  },\n  unmask: function(data, mask) {\n    var maskNum = mask.readUInt32LE(0, true);\n    var length = data.length;\n    var i = 0;\n    for (; i < length - 3; i += 4) {\n      var num = maskNum ^ data.readUInt32LE(i, true);\n      if (num < 0) num = 4294967296 + num;\n      data.writeUInt32LE(num, i, true);\n    }\n    switch (length % 4) {\n      case 3: data[i + 2] = data[i + 2] ^ mask[2];\n      case 2: data[i + 1] = data[i + 1] ^ mask[1];\n      case 1: data[i] = data[i] ^ mask[0];\n      case 0:;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}