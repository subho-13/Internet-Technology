{"ast":null,"code":"var _jsxFileName = \"/home/subho/Programming/Internet-Technology/Athena/client/src/components/chat/chat.js\";\nimport React, { Component } from \"react\";\nimport ChatHeader from \"./chat-header\";\nimport ChatList from \"./chat-list\";\nimport \"./chat.css\";\nimport Display from \"./display\";\nimport SendBar from \"./sendbar\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Chat extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleDelete = receiver => {};\n\n    this.handleDisplay = receiver => {\n      this.setState({\n        receiver: receiver,\n        currentMessages: [...this.storage.get(receiver.username)]\n      });\n    };\n\n    this.handleLogout = () => {};\n\n    this.handleUser = (u, t) => {\n      if (this.state.receiverlist.has(u) === false) {\n        this.setState(prevstate => ({\n          receiverlist: prevstate.receiverlist.set(u, t)\n        }));\n      }\n    };\n\n    this.handleSend = messageBody => {\n      const receivername = this.state.receiver.username;\n      newMessage = {\n        from: this.username,\n        to: receivername,\n        type: messageBody.type,\n        content: messageBody.content\n      };\n      this.setState({\n        currentMessages: [...this.state.currentMessages, newMessage]\n      });\n      this.storage.set(receivername, [...this.storage.get(receivername), newMessage]);\n    };\n\n    this.storage = new Map();\n    this.state = {\n      receiverlist: new Map(),\n      receiver: {\n        username: \"\",\n        type: \"\"\n      },\n      currentMessages: []\n    };\n    this.username = this.props.username;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(ChatHeader, {\n        handleUser: this.handleUser,\n        handleLogout: this.handleLogout\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"section-2\",\n        children: [/*#__PURE__*/_jsxDEV(ChatList, {\n          receivers: this.state.receiverlist,\n          onDelete: this.handleDelete,\n          onDisplay: this.handleDisplay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Display, {\n          username: this.username,\n          name: this.state.receiver.username,\n          messages: this.state.currentMessages\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(SendBar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default Chat;","map":{"version":3,"sources":["/home/subho/Programming/Internet-Technology/Athena/client/src/components/chat/chat.js"],"names":["React","Component","ChatHeader","ChatList","Display","SendBar","Chat","constructor","props","handleDelete","receiver","handleDisplay","setState","currentMessages","storage","get","username","handleLogout","handleUser","u","t","state","receiverlist","has","prevstate","set","handleSend","messageBody","receivername","newMessage","from","to","type","content","Map","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport ChatHeader from \"./chat-header\"\nimport ChatList from \"./chat-list\"\nimport \"./chat.css\"\nimport Display from \"./display\"\nimport SendBar from \"./sendbar\"\n\nclass Chat extends Component {\n    constructor(props) {\n        super(props)\n        this.storage = new Map()\n        this.state = {\n            receiverlist: new Map(),\n            receiver: {\n                username: \"\",\n                type: \"\",\n            },\n            currentMessages: [],\n        }\n        this.username = this.props.username\n    }\n\n    handleDelete = (receiver) => {}\n\n    handleDisplay = (receiver) => {\n        this.setState({\n            receiver: receiver,\n            currentMessages: [...this.storage.get(receiver.username)],\n        })\n    }\n\n    handleLogout = () => {}\n\n    handleUser = (u, t) => {\n        if (this.state.receiverlist.has(u) === false) {\n            this.setState((prevstate) => ({\n                receiverlist: prevstate.receiverlist.set(u, t),\n            }))\n        }\n    }\n\n    handleSend = (messageBody) => {\n        const receivername = this.state.receiver.username\n\n        newMessage = {\n            from: this.username,\n            to: receivername,\n            type: messageBody.type,\n            content: messageBody.content,\n        }\n\n        this.setState({\n            currentMessages: [...this.state.currentMessages, newMessage],\n        })\n\n        this.storage.set(receivername, [\n            ...this.storage.get(receivername),\n            newMessage,\n        ])\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <ChatHeader\n                    handleUser={this.handleUser}\n                    handleLogout={this.handleLogout}\n                />\n                <div className=\"section-2\">\n                    <ChatList\n                        receivers={this.state.receiverlist}\n                        onDelete={this.handleDelete}\n                        onDisplay={this.handleDisplay}\n                    />\n                    <Display\n                        username={this.username}\n                        name={this.state.receiver.username}\n                        messages={this.state.currentMessages}\n                    />\n                    <SendBar />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}