{"ast":null,"code":"/*\n * Module requirements.\n */\nvar isArray = require('isarray');\n/**\n * Module exports.\n */\n\n\nmodule.exports = hasBinary;\n/**\n * Checks for binary data.\n *\n * Right now only Buffer and ArrayBuffer are supported..\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(data) {\n  function _hasBinary(obj) {\n    if (!obj) return false;\n\n    if (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj) || global.ArrayBuffer && obj instanceof ArrayBuffer || global.Blob && obj instanceof Blob || global.File && obj instanceof File) {\n      return true;\n    }\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n        if (_hasBinary(obj[i])) {\n          return true;\n        }\n      }\n    } else if (obj && 'object' == typeof obj) {\n      // see: https://github.com/Automattic/has-binary/pull/4\n      if (obj.toJSON && 'function' == typeof obj.toJSON) {\n        obj = obj.toJSON();\n      }\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return _hasBinary(data);\n}","map":{"version":3,"sources":["/home/subho/Programming/Internet-Technology/Athena/node_modules/has-binary/index.js"],"names":["isArray","require","module","exports","hasBinary","data","_hasBinary","obj","global","Buffer","isBuffer","ArrayBuffer","Blob","File","i","length","toJSON","key","Object","prototype","hasOwnProperty","call"],"mappings":"AACA;AACA;AACA;AAEA,IAAIA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAArB;AAEA;AACA;AACA;;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,SAAjB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,SAAT,CAAmBC,IAAnB,EAAyB;AAEvB,WAASC,UAAT,CAAoBC,GAApB,EAAyB;AACvB,QAAI,CAACA,GAAL,EAAU,OAAO,KAAP;;AAEV,QAAMC,MAAM,CAACC,MAAP,IAAiBD,MAAM,CAACC,MAAP,CAAcC,QAA/B,IAA2CF,MAAM,CAACC,MAAP,CAAcC,QAAd,CAAuBH,GAAvB,CAA5C,IACCC,MAAM,CAACG,WAAP,IAAsBJ,GAAG,YAAYI,WADtC,IAECH,MAAM,CAACI,IAAP,IAAeL,GAAG,YAAYK,IAF/B,IAGCJ,MAAM,CAACK,IAAP,IAAeN,GAAG,YAAYM,IAHpC,EAIM;AACJ,aAAO,IAAP;AACD;;AAED,QAAIb,OAAO,CAACO,GAAD,CAAX,EAAkB;AAChB,WAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,GAAG,CAACQ,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC;AACjC,YAAIR,UAAU,CAACC,GAAG,CAACO,CAAD,CAAJ,CAAd,EAAwB;AACpB,iBAAO,IAAP;AACH;AACJ;AACF,KAND,MAMO,IAAIP,GAAG,IAAI,YAAY,OAAOA,GAA9B,EAAmC;AACxC;AACA,UAAIA,GAAG,CAACS,MAAJ,IAAc,cAAc,OAAOT,GAAG,CAACS,MAA3C,EAAmD;AACjDT,QAAAA,GAAG,GAAGA,GAAG,CAACS,MAAJ,EAAN;AACD;;AAED,WAAK,IAAIC,GAAT,IAAgBV,GAAhB,EAAqB;AACnB,YAAIW,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCd,GAArC,EAA0CU,GAA1C,KAAkDX,UAAU,CAACC,GAAG,CAACU,GAAD,CAAJ,CAAhE,EAA4E;AAC1E,iBAAO,IAAP;AACD;AACF;AACF;;AAED,WAAO,KAAP;AACD;;AAED,SAAOX,UAAU,CAACD,IAAD,CAAjB;AACD","sourcesContent":["\n/*\n * Module requirements.\n */\n\nvar isArray = require('isarray');\n\n/**\n * Module exports.\n */\n\nmodule.exports = hasBinary;\n\n/**\n * Checks for binary data.\n *\n * Right now only Buffer and ArrayBuffer are supported..\n *\n * @param {Object} anything\n * @api public\n */\n\nfunction hasBinary(data) {\n\n  function _hasBinary(obj) {\n    if (!obj) return false;\n\n    if ( (global.Buffer && global.Buffer.isBuffer && global.Buffer.isBuffer(obj)) ||\n         (global.ArrayBuffer && obj instanceof ArrayBuffer) ||\n         (global.Blob && obj instanceof Blob) ||\n         (global.File && obj instanceof File)\n        ) {\n      return true;\n    }\n\n    if (isArray(obj)) {\n      for (var i = 0; i < obj.length; i++) {\n          if (_hasBinary(obj[i])) {\n              return true;\n          }\n      }\n    } else if (obj && 'object' == typeof obj) {\n      // see: https://github.com/Automattic/has-binary/pull/4\n      if (obj.toJSON && 'function' == typeof obj.toJSON) {\n        obj = obj.toJSON();\n      }\n\n      for (var key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && _hasBinary(obj[key])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  return _hasBinary(data);\n}\n"]},"metadata":{},"sourceType":"script"}