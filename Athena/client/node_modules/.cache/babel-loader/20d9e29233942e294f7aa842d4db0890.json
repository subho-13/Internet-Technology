{"ast":null,"code":"import _toConsumableArray from\"/home/subho/Programming/Internet-Technology/Athena/client/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _classCallCheck from\"/home/subho/Programming/Internet-Technology/Athena/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/home/subho/Programming/Internet-Technology/Athena/client/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/home/subho/Programming/Internet-Technology/Athena/client/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/home/subho/Programming/Internet-Technology/Athena/client/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import ChatHeader from\"./chat-header\";import ChatList from\"./chat-list\";import\"./chat.css\";import Display from\"./display\";import SendBar from\"./sendbar\";import history from\"../../history\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Chat=/*#__PURE__*/function(_Component){_inherits(Chat,_Component);var _super=_createSuper(Chat);function Chat(props){var _this;_classCallCheck(this,Chat);_this=_super.call(this,props);_this.handleDelete=function(receiver){var newReceiverList=_this.state.receiverlist;newReceiverList.delete(receiver.username);_this.setState({receiverlist:newReceiverList});_this.props.socket.emit(\"leave\",receiver.username);};_this.handleDisplay=function(receiver){console.log(receiver);_this.setState({receiver:receiver});if(_this.storage.has(receiver.username)){_this.setState({currentMessages:_this.storage.get(receiver.username)});}else{_this.setState({currentMessages:[]});}};_this.handleLogout=function(){console.log(_this.username);_this.props.socket.emit(\"leave\",_this.username);history.push(\"/\");};_this.handleUser=function(username,type){if(_this.state.receiverlist.has(username)===false){_this.setState(function(prevstate){return{receiverlist:prevstate.receiverlist.set(username,type)};});}_this.props.socket.emit(\"join\",username);};_this.handleSend=function(messageBody){var receivername=_this.state.receiver.username;var newMessage={from:_this.username,to:receivername,type:messageBody.type,content:messageBody.content};_this.setState({currentMessages:[].concat(_toConsumableArray(_this.state.currentMessages),[newMessage])});if(_this.storage.has(receivername)){_this.storage.set(receivername,[].concat(_toConsumableArray(_this.storage.get(receivername)),[newMessage]));}else{_this.storage.set(receivername,[newMessage]);}_this.props.socket.emit(\"send\",newMessage);};_this.storage=new Map();_this.state={receiverlist:new Map(),receiver:{username:\"\",type:\"\"},currentMessages:[]};_this.username=_this.props.username;_this.props.socket.on(\"receive\",function(message){console.log(message);if(message.from===_this.receiver.username){_this.setState({currentMessages:[].concat(_toConsumableArray(_this.state.currentMessages),[message])});}if(_this.storage.has(message.from)){_this.storage.set(message.from,[].concat(_toConsumableArray(_this.storage.get(message.from)),[message]));}else{_this.storage.set(message.from,[message]);}});return _this;}_createClass(Chat,[{key:\"render\",value:function render(){var sendbar,display;if(this.state.receiver.username!==\"\"){sendbar=/*#__PURE__*/_jsx(SendBar,{handleSend:this.handleSend,className:\"sendbar\"});display=/*#__PURE__*/_jsx(Display,{username:this.username,name:this.state.receiver.username,messages:this.state.currentMessages});}return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsx(ChatHeader,{username:this.username,handleUser:this.handleUser,handleLogout:this.handleLogout}),/*#__PURE__*/_jsxs(\"div\",{className:\"section-2\",children:[/*#__PURE__*/_jsx(ChatList,{receivers:this.state.receiverlist,onDelete:this.handleDelete,onDisplay:this.handleDisplay}),display,sendbar]})]});}}]);return Chat;}(Component);export default Chat;","map":{"version":3,"sources":["/home/subho/Programming/Internet-Technology/Athena/client/src/components/chat/chat.js"],"names":["React","Component","ChatHeader","ChatList","Display","SendBar","history","Chat","props","handleDelete","receiver","newReceiverList","state","receiverlist","delete","username","setState","socket","emit","handleDisplay","console","log","storage","has","currentMessages","get","handleLogout","push","handleUser","type","prevstate","set","handleSend","messageBody","receivername","newMessage","from","to","content","Map","on","message","sendbar","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\"\nimport ChatHeader from \"./chat-header\"\nimport ChatList from \"./chat-list\"\nimport \"./chat.css\"\nimport Display from \"./display\"\nimport SendBar from \"./sendbar\"\nimport history from \"../../history\"\n\nclass Chat extends Component {\n    constructor(props) {\n        super(props)\n        this.storage = new Map()\n        this.state = {\n            receiverlist: new Map(),\n            receiver: {\n                username: \"\",\n                type: \"\",\n            },\n            currentMessages: [],\n        }\n        this.username = this.props.username\n\n        this.props.socket.on(\"receive\", (message) => {\n            console.log(message)\n            if (message.from === this.receiver.username) {\n                this.setState({\n                    currentMessages: [...this.state.currentMessages, message],\n                })\n            }\n\n            if (this.storage.has(message.from)) {\n                this.storage.set(message.from, [\n                    ...this.storage.get(message.from),\n                    message,\n                ])\n            } else {\n                this.storage.set(message.from, [message])\n            }\n        })\n    }\n\n    handleDelete = (receiver) => {\n        const newReceiverList = this.state.receiverlist\n        newReceiverList.delete(receiver.username)\n        this.setState({\n            receiverlist: newReceiverList,\n        })\n\n        this.props.socket.emit(\"leave\", receiver.username)\n    }\n\n    handleDisplay = (receiver) => {\n        console.log(receiver)\n\n        this.setState({\n            receiver: receiver,\n        })\n\n        if (this.storage.has(receiver.username)) {\n            this.setState({\n                currentMessages: this.storage.get(receiver.username),\n            })\n        } else {\n            this.setState({\n                currentMessages: [],\n            })\n        }\n    }\n\n    handleLogout = () => {\n        console.log(this.username)\n        this.props.socket.emit(\"leave\", this.username)\n        history.push(\"/\")\n    }\n\n    handleUser = (username, type) => {\n        if (this.state.receiverlist.has(username) === false) {\n            this.setState((prevstate) => ({\n                receiverlist: prevstate.receiverlist.set(username, type),\n            }))\n        }\n\n        this.props.socket.emit(\"join\", username)\n    }\n\n    handleSend = (messageBody) => {\n        const receivername = this.state.receiver.username\n\n        const newMessage = {\n            from: this.username,\n            to: receivername,\n            type: messageBody.type,\n            content: messageBody.content,\n        }\n\n        this.setState({\n            currentMessages: [...this.state.currentMessages, newMessage],\n        })\n\n        if (this.storage.has(receivername)) {\n            this.storage.set(receivername, [\n                ...this.storage.get(receivername),\n                newMessage,\n            ])\n        } else {\n            this.storage.set(receivername, [newMessage])\n        }\n\n        this.props.socket.emit(\"send\", newMessage)\n    }\n\n    render() {\n        let sendbar, display\n\n        if (this.state.receiver.username !== \"\") {\n            sendbar = (\n                <SendBar handleSend={this.handleSend} className=\"sendbar\" />\n            )\n\n            display = (\n                <Display\n                    username={this.username}\n                    name={this.state.receiver.username}\n                    messages={this.state.currentMessages}\n                />\n            )\n        }\n\n        return (\n            <div className=\"chat-container\">\n                <ChatHeader\n                    username={this.username}\n                    handleUser={this.handleUser}\n                    handleLogout={this.handleLogout}\n                />\n                <div className=\"section-2\">\n                    <ChatList\n                        receivers={this.state.receiverlist}\n                        onDelete={this.handleDelete}\n                        onDisplay={this.handleDisplay}\n                    />\n                    {display}\n                    {sendbar}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Chat\n"]},"metadata":{},"sourceType":"module"}