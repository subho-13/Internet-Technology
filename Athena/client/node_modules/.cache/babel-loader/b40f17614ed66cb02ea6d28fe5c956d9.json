{"ast":null,"code":"/**\n * Helpers.\n */\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function (val, options) {\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long ? long(val) : short(val);\n};\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\n\nfunction parse(str) {\n  str = '' + str;\n  if (str.length > 10000) return;\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\n\nfunction long(ms) {\n  return plural(ms, d, 'day') || plural(ms, h, 'hour') || plural(ms, m, 'minute') || plural(ms, s, 'second') || ms + ' ms';\n}\n/**\n * Pluralization helper.\n */\n\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}","map":{"version":3,"sources":["/home/subho/Programming/Internet-Technology/Athena/node_modules/socket.io-parser/node_modules/ms/index.js"],"names":["s","m","h","d","y","module","exports","val","options","parse","long","short","str","length","match","exec","n","parseFloat","type","toLowerCase","ms","Math","round","plural","name","floor","ceil"],"mappings":"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","sourcesContent":["/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} options\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options){\n  options = options || {};\n  if ('string' == typeof val) return parse(val);\n  return options.long\n    ? long(val)\n    : short(val);\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = '' + str;\n  if (str.length > 10000) return;\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(str);\n  if (!match) return;\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction short(ms) {\n  if (ms >= d) return Math.round(ms / d) + 'd';\n  if (ms >= h) return Math.round(ms / h) + 'h';\n  if (ms >= m) return Math.round(ms / m) + 'm';\n  if (ms >= s) return Math.round(ms / s) + 's';\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction long(ms) {\n  return plural(ms, d, 'day')\n    || plural(ms, h, 'hour')\n    || plural(ms, m, 'minute')\n    || plural(ms, s, 'second')\n    || ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) return;\n  if (ms < n * 1.5) return Math.floor(ms / n) + ' ' + name;\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n"]},"metadata":{},"sourceType":"script"}