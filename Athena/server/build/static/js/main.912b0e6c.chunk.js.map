{"version":3,"sources":["history.js","components/login/login.js","components/chat/chat-header.js","components/chat/list-item.js","components/chat/chat-list.js","components/chat/message.js","components/chat/personal-message.js","components/chat/group-message.js","components/chat/display.js","components/chat/sendbar.js","components/chat/chat.js","router.js","socket.js","app2.js","app.js","index.js"],"names":["history","Login","handleSubmit","event","preventDefault","props","onSubmit","state","username","socket","emit","push","handleUsernameChange","setState","target","value","handleUsernameClick","className","this","htmlFor","type","id","name","onClick","onChange","Component","ChatHeader","handleUsername","handleAdd","whom","showform","handleClick","handleSubmitFriend","handleUser","getFriendForm","handleSubmitGroup","getGroupForm","headerForm","handleLogout","ListItem","onDisplay","receiver","onDelete","ChatList","receivers","map","entry","Message","content","src","alt","PersonalMessage","owner","textContent","imageContent","GroupMessage","header","innerHTML","Display","groupMessages","messages","message","from","personalMessages","executeScroll","myRef","current","scrollIntoView","endref","React","createRef","behaviour","messagelist","console","log","ref","SendBar","handleSend","handleOptionClick","optionButtonName","handleTextContent","getTextForm","handleImageFile","reader","FileReader","onloadend","result","readAsDataURL","files","getImgForm","sendform","Chat","handleDelete","newReceiverList","receiverlist","delete","handleDisplay","storage","has","currentMessages","get","prevstate","set","group","messageBody","receivername","newMessage","to","Map","on","sendbar","display","Routes","exact","path","render","io","connect","App2","initsocket","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.912b0e6c.chunk.js","sourcesContent":["import { createBrowserHistory as history } from \"history\"\n\nexport default history()\n","import React, { Component } from \"react\"\nimport \"./login.css\"\nimport history from \"./../../history\"\n\nclass Login extends Component {\n    constructor() {\n        super()\n        this.state = {\n            username: \"name\",\n        }\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault()\n        this.props.onSubmit(this.state.username)\n        socket.emit(\"join\", this.state.username)\n        history.push(\"/Chat\")\n    }\n\n    handleUsernameChange = (event) => {\n        this.setState({ username: event.target.value })\n    }\n\n    handleUsernameClick = () => {\n        this.setState({ username: \"\" })\n    }\n\n    render() {\n        return (\n            <div className=\"login-container\">\n                <form onSubmit={this.handleSubmit} className=\"login-form\">\n                    <div className=\"login-username\">\n                        <label htmlFor=\"username\">USERNAME</label>\n                        <input\n                            type=\"text\"\n                            id=\"username\"\n                            name=\"username\"\n                            value={this.state.username}\n                            onClick={this.handleUsernameClick}\n                            onChange={this.handleUsernameChange}\n                        />\n                    </div>\n                    <div className=\"login-join\">\n                        <input type=\"submit\" value=\"JOIN\" />\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default Login\n","import React, { Component } from \"react\"\nimport \"./chat-header.css\"\n\nclass ChatHeader extends Component {\n    constructor() {\n        super()\n        this.state = {\n            showform: \"none\",\n            username: \"username\",\n        }\n    }\n\n    handleUsername = (event) => {\n        this.setState({ username: event.target.value })\n    }\n\n    handleAdd = (whom) => {\n        this.setState({ showform: whom })\n    }\n\n    handleClick = () => {\n        this.setState({ username: \"\" })\n    }\n\n    handleSubmitFriend = (event) => {\n        event.preventDefault()\n        this.props.handleUser(this.state.username, \"friend\")\n        this.setState({ showform: \"none\" })\n    }\n\n    getFriendForm = () => {\n        return (\n            <form onSubmit={this.handleSubmitFriend} className=\"header-form\">\n                <input\n                    type=\"text\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.handleUsername}\n                    onClick={this.handleClick}\n                    className=\"header-user\"\n                />\n                <input type=\"submit\" value=\"Add\" className=\"header-join\" />\n            </form>\n        )\n    }\n\n    handleSubmitGroup = (event) => {\n        event.preventDefault()\n        this.props.handleUser(this.state.username, \"group\")\n        this.setState({ showform: \"none\" })\n    }\n\n    getGroupForm = () => {\n        return (\n            <form onSubmit={this.handleSubmitGroup} className=\"header-form\">\n                <input\n                    type=\"text\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.handleUsername}\n                    onClick={this.handleClick}\n                    className=\"header-user\"\n                />\n                <input type=\"submit\" value=\"Join\" className=\"header-join\" />\n            </form>\n        )\n    }\n\n    render() {\n        let headerForm\n\n        if (this.state.showform === \"group\") {\n            headerForm = this.getGroupForm()\n        } else if (this.state.showform === \"friend\") {\n            headerForm = this.getFriendForm()\n        }\n\n        return (\n            <div className=\"header-section\">\n                {headerForm}\n                <button\n                    onClick={() => this.handleAdd(\"friend\")}\n                    className=\"friend\"\n                >\n                    Friend\n                </button>\n                <button\n                    onClick={() => this.handleAdd(\"group\")}\n                    className=\"group\"\n                >\n                    Group\n                </button>\n                <button onClick={this.props.handleLogout} className=\"logout\">\n                    Logout\n                </button>\n                <div>{this.props.username}</div>\n            </div>\n        )\n    }\n}\n\nexport default ChatHeader\n","import React, { Component } from \"react\"\n\n/**\n * input : {id, type}\n */\n\nclass ListItem extends Component {\n    render() {\n        return (\n            <div>\n                <button\n                    onClick={() => this.props.onDisplay(this.props.receiver)}\n                >\n                    {this.props.receiver.username}\n                </button>\n                <button\n                    onClick={() => this.props.onDelete(this.props.receiver)}\n                >\n                    D\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default ListItem\n","import React, { Component } from \"react\"\nimport ListItem from \"./list-item\"\nimport \"./chat-list.css\"\n\nclass ChatList extends Component {\n    render() {\n        return (\n            <div className=\"chatlist\">\n                {[...this.props.receivers].map((entry) => {\n                    return (\n                        <ListItem\n                            key={entry[0]}\n                            receiver={{ username: entry[0], type: entry[1] }}\n                            onDelete={this.props.onDelete}\n                            onDisplay={this.props.onDisplay}\n                        />\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default ChatList\n","import React from \"react\"\nimport \"./message.css\"\n\nclass Message {\n    static imageContent(content, className) {\n        return <img className={className} src={content} alt=\"image\" />\n    }\n\n    static textContent(content, className) {\n        return <p className={className}>{content}</p>\n    }\n}\n\nexport default Message\n","import React, { Component } from \"react\"\nimport Message from \"./message\"\n\nclass PersonalMessage extends Component {\n    render() {\n        let className = \"personal-message-\" + this.props.owner\n        if (this.props.type === \"text\") {\n            return Message.textContent(this.props.content, className + \"-text\")\n        } else if (this.props.type === \"image\") {\n            return Message.imageContent(\n                this.props.content,\n                className + \"-image\"\n            )\n        }\n    }\n}\n\nexport default PersonalMessage\n","import React, { Component } from \"react\"\nimport Message from \"./message\"\n\nclass GroupMessage extends Component {\n    render() {\n        let header,\n            innerHTML,\n            className = \"group-message-\"\n\n        if (this.props.owner !== \"self\") {\n            header = <p className=\"group-message-header\">{this.props.owner}</p>\n            className += \"other\"\n        } else {\n            className += \"self\"\n        }\n\n        if (this.props.content === \"text\") {\n            innerHTML = Message.textContent(\n                this.props.content,\n                className + \"-text\"\n            )\n        } else if (this.props.content === \"image\") {\n            innerHTML = Message.imageContent(\n                this.props.content,\n                className + \"-image\"\n            )\n        }\n\n        return (\n            <div>\n                {header}\n                {innerHTML}\n            </div>\n        )\n    }\n}\n\nexport default GroupMessage\n","import React, { Component } from \"react\"\nimport PersonalMessage from \"./personal-message\"\nimport GroupMessage from \"./group-message\"\nimport \"./display.css\"\n\nclass Display extends Component {\n    constructor(props) {\n        super(props)\n        this.username = this.props.username\n        this.endref = React.createRef()\n    }\n\n    componentDidUpdate() {\n        this.endref.current.scrollIntoView({ behaviour: \"smooth\" })\n    }\n\n    groupMessages = (messages) => {\n        return messages.map((message) => {\n            let owner\n\n            if (message.from === this.username) {\n                owner = \"self\"\n            } else {\n                owner = message.from\n            }\n\n            return (\n                <GroupMessage\n                    owner={owner}\n                    type={message.type}\n                    content={message.content}\n                />\n            )\n        })\n    }\n\n    personalMessages = (messages) => {\n        return messages.map((message) => {\n            let owner\n\n            if (message.from === this.username) {\n                owner = \"self\"\n            } else {\n                owner = \"other\"\n            }\n\n            return (\n                <PersonalMessage\n                    owner={owner}\n                    type={message.type}\n                    content={message.content}\n                />\n            )\n        })\n    }\n\n    executeScroll = () => this.myRef.current.scrollIntoView()\n\n    render() {\n        let messagelist\n\n        if (this.props.type === \"group\") {\n            messagelist = this.groupMessages\n        } else {\n            messagelist = this.personalMessages\n        }\n\n        console.log(this.props.messages)\n\n        return (\n            <div className=\"display\">\n                <div className=\"display-header\">\n                    <h>{this.props.name}</h>\n                </div>\n                <div className=\"overflow\">\n                    <div className=\"display-messages\">\n                        {messagelist(this.props.messages)}\n                    </div>\n                    <div ref={this.endref} />\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Display\n","import React, { Component } from \"react\"\nimport \"./sendbar.css\"\n\nclass SendBar extends Component {\n    constructor() {\n        super()\n        this.state = {\n            type: \"text\",\n            content: \"\",\n            optionButtonName: \"Text\",\n        }\n    }\n\n    onSubmit = (event) => {\n        event.preventDefault()\n        this.props.handleSend({\n            type: this.state.type,\n            content: this.state.content,\n        })\n    }\n\n    handleOptionClick = () => {\n        if (this.state.type === \"text\") {\n            this.setState({ type: \"image\", optionButtonName: \"Image\" })\n        } else {\n            this.setState({ type: \"text\", optionButtonName: \"Text\" })\n        }\n    }\n\n    handleTextContent = (event) => {\n        this.setState({ content: event.target.value })\n    }\n\n    getTextForm = () => {\n        return (\n            <form onSubmit={this.onSubmit} className=\"sendbar-form\">\n                <input\n                    type=\"text\"\n                    name=\"image\"\n                    onChange={this.handleTextContent}\n                    className=\"sendbar-text\"\n                />\n                <input\n                    type=\"submit\"\n                    value=\"Send\"\n                    className=\"sendbar-send-button\"\n                />\n            </form>\n        )\n    }\n\n    handleImageFile = (event) => {\n        const reader = new FileReader()\n\n        reader.onloadend = () => {\n            this.setState({ content: reader.result })\n        }\n\n        reader.readAsDataURL(event.target.files[0])\n    }\n\n    getImgForm = () => {\n        return (\n            <form onSubmit={this.onSubmit} className=\"sendbar-form\">\n                <label className=\"sendbar-image\">\n                    Upload\n                    <input\n                        type=\"file\"\n                        name=\"image\"\n                        onChange={this.handleImageFile}\n                    />\n                </label>\n                <input\n                    type=\"submit\"\n                    value=\"Send\"\n                    className=\"sendbar-send-button\"\n                />\n            </form>\n        )\n    }\n\n    render() {\n        let sendform\n\n        if (this.state.type === \"text\") {\n            sendform = this.getTextForm()\n        } else if (this.state.type === \"image\") {\n            sendform = this.getImgForm()\n        }\n\n        return (\n            <div className=\"sendbar\">\n                <button\n                    onClick={this.handleOptionClick}\n                    className=\"sendbar-option-button\"\n                >\n                    {this.state.optionButtonName}\n                </button>\n                {sendform}\n            </div>\n        )\n    }\n}\n\nexport default SendBar\n","import React, { Component } from \"react\"\nimport ChatHeader from \"./chat-header\"\nimport ChatList from \"./chat-list\"\nimport \"./chat.css\"\nimport Display from \"./display\"\nimport SendBar from \"./sendbar\"\nimport history from \"../../history\"\n\nclass Chat extends Component {\n    constructor(props) {\n        super(props)\n        this.storage = new Map()\n        this.state = {\n            receiverlist: new Map(),\n            receiver: {\n                username: \"\",\n                type: \"\",\n            },\n            currentMessages: [],\n        }\n        this.username = this.props.username\n\n        this.props.socket.on(\"receive\", (message) => {\n            console.log(message)\n            if (message.from === this.receiver.username) {\n                this.setState({\n                    currentMessages: [...this.state.currentMessages, message],\n                })\n            }\n\n            if (this.storage.has(message.from)) {\n                this.storage.set(message.from, [\n                    ...this.storage.get(message.from),\n                    message,\n                ])\n            } else {\n                this.storage.set(message.from, [message])\n            }\n        })\n    }\n\n    handleDelete = (receiver) => {\n        const newReceiverList = this.state.receiverlist\n        newReceiverList.delete(receiver.username)\n        this.setState({\n            receiverlist: newReceiverList,\n        })\n\n        this.props.socket.emit(\"leave\", receiver.username)\n    }\n\n    handleDisplay = (receiver) => {\n        console.log(receiver)\n\n        this.setState({\n            receiver: receiver,\n        })\n\n        if (this.storage.has(receiver.username)) {\n            this.setState({\n                currentMessages: this.storage.get(receiver.username),\n            })\n        } else {\n            this.setState({\n                currentMessages: [],\n            })\n        }\n    }\n\n    handleLogout = () => {\n        console.log(this.username)\n        this.props.socket.emit(\"leave\", this.username)\n        history.push(\"/\")\n    }\n\n    handleUser = (username, type) => {\n        if (this.state.receiverlist.has(username) === false) {\n            this.setState((prevstate) => ({\n                receiverlist: prevstate.receiverlist.set(username, type),\n            }))\n        }\n\n        if (type === group) {\n            this.props.socket.emit(\"join\", username)\n        }\n    }\n\n    handleSend = (messageBody) => {\n        const receivername = this.state.receiver.username\n\n        const newMessage = {\n            from: this.username,\n            to: receivername,\n            type: messageBody.type,\n            content: messageBody.content,\n        }\n\n        this.setState({\n            currentMessages: [...this.state.currentMessages, newMessage],\n        })\n\n        if (this.storage.has(receivername)) {\n            this.storage.set(receivername, [\n                ...this.storage.get(receivername),\n                newMessage,\n            ])\n        } else {\n            this.storage.set(receivername, [newMessage])\n        }\n\n        this.props.socket.emit(\"send\", newMessage)\n    }\n\n    render() {\n        let sendbar, display\n\n        if (this.state.receiver.username !== \"\") {\n            sendbar = (\n                <SendBar handleSend={this.handleSend} className=\"sendbar\" />\n            )\n\n            display = (\n                <Display\n                    username={this.username}\n                    name={this.state.receiver.username}\n                    messages={this.state.currentMessages}\n                />\n            )\n        }\n\n        return (\n            <div className=\"chat-container\">\n                <ChatHeader\n                    username={this.username}\n                    handleUser={this.handleUser}\n                    handleLogout={this.handleLogout}\n                />\n                <div className=\"section-2\">\n                    <ChatList\n                        receivers={this.state.receiverlist}\n                        onDelete={this.handleDelete}\n                        onDisplay={this.handleDisplay}\n                    />\n                    {display}\n                    {sendbar}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Chat\n","import React, { Component } from \"react\"\nimport { Router, Switch, Route } from \"react-router-dom\"\nimport Login from \"./components/login/login\"\nimport Chat from \"./components/chat/chat\"\nimport history from \"./history\"\n\nclass Routes extends Component {\n    render() {\n        console.log(this.props.socket)\n        return (\n            <Router history={history}>\n                <Switch>\n                    <Route\n                        exact\n                        path=\"/\"\n                        render={() => (\n                            <Login\n                                socket={this.props.socket}\n                                onSubmit={this.props.handleUsername}\n                            />\n                        )}\n                    />\n                    <Route\n                        path=\"/Chat\"\n                        render={() => (\n                            <Chat\n                                socket={this.props.socket}\n                                username={this.props.username}\n                            />\n                        )}\n                    />\n                </Switch>\n            </Router>\n        )\n    }\n}\n\nexport default Routes\n","import { io } from \"socket.io-client\"\nconst socket = io.connect(\"http://localhost:8080\")\nexport default socket\n","import io from \"socket.io-client\"\nimport React, { Component } from \"react\"\n\nclass App2 extends Component {\n    state = {\n        socket: null,\n    }\n\n    componentDidMount() {\n        this.initsocket()\n    }\n\n    initsocket = () => {\n        var socket = io()\n        this.setState({ socket })\n        socket.on(\"connect\", () => {\n            console.log(\"connected\")\n        })\n    }\n\n    render() {\n        console.log(this.state.socket)\n        return <div>Hi</div>\n    }\n}\n\nexport default App2\n","import React, { Component } from \"react\"\nimport Routes from \"./router\"\nimport socket from \"./socket\"\n\nclass App extends Component {\n    constructor() {\n        super()\n        this.state = {\n            username: \"\",\n        }\n    }\n\n    handleUsername = (value) => {\n        this.setState({ username: value })\n    }\n\n    render() {\n        console.log(socket)\n        socket.emit(\"join\", \"hello\")\n        return (\n            <div className=\"app-container\">\n                <Routes\n                    username={this.state.username}\n                    handleUsername={this.handleUsername}\n                />\n            </div>\n        )\n    }\n}\n\nexport default App\n","import ReactDOM from \"react-dom\"\n\nimport App from \"./app\"\nimport App2 from \"./app2\"\n\nimport io from \"socket.io-client\"\nvar socket = io.connect(\"localhost:8080\")\nconsole.log(socket)\n\nReactDOM.render(<App2 />, document.getElementById(\"root\"))\n"],"sourceRoot":""}